{"version":3,"sources":["../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/internal/constants.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/internal/debug.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/internal/re.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/internal/parse-options.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/internal/identifiers.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/classes/semver.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/parse.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/valid.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/clean.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/inc.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/compare.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/eq.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/diff.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/major.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/minor.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/patch.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/prerelease.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/rcompare.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/compare-loose.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/compare-build.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/sort.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/rsort.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/gt.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/lt.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/neq.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/gte.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/lte.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/cmp.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/coerce.js","../../../node_modules/.pnpm/yallist@4.0.0/node_modules/yallist/iterator.js","../../../node_modules/.pnpm/yallist@4.0.0/node_modules/yallist/yallist.js","../../../node_modules/.pnpm/lru-cache@6.0.0/node_modules/lru-cache/index.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/classes/range.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/classes/comparator.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/satisfies.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/to-comparators.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/max-satisfying.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/min-satisfying.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/min-version.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/valid.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/outside.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/gtr.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/ltr.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/intersects.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/simplify.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/subset.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/index.js","../../../node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js","../../versions/src/lib/getBuiltinVersions.ts","../../versions/src/lib/checkFuelCoreVersionCompatibility.ts","../../versions/src/index.ts","../../errors/src/error-codes.ts","../../errors/src/fuel-error.ts","../src/coders/abstract-coder.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/_version.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/utils/properties.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/utils/errors.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/utils/data.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/utils/utf8.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/crypto/crypto.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/crypto/pbkdf2.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/crypto/sha2.ts","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/internal/constants.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/internal/debug.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/internal/re.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/internal/parse-options.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/internal/identifiers.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/classes/semver.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/parse.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/valid.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/clean.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/inc.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/compare.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/eq.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/diff.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/major.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/minor.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/patch.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/prerelease.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/rcompare.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/compare-loose.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/compare-build.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/sort.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/rsort.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/gt.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/lt.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/neq.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/gte.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/lte.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/cmp.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/coerce.js","../../../node_modules/.pnpm/yallist@4.0.0/node_modules/yallist/iterator.js","../../../node_modules/.pnpm/yallist@4.0.0/node_modules/yallist/yallist.js","../../../node_modules/.pnpm/lru-cache@6.0.0/node_modules/lru-cache/index.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/classes/range.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/classes/comparator.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/satisfies.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/to-comparators.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/max-satisfying.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/min-satisfying.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/min-version.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/valid.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/outside.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/gtr.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/ltr.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/intersects.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/simplify.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/subset.js","../../../node_modules/.pnpm/semver@7.3.8/node_modules/semver/index.js","../../utils/src/utils/capitalizeString.ts","../../utils/src/utils/chunkAndPadBytes.ts","../../utils/src/utils/concat.ts","../../versions/src/lib/getBuiltinVersions.ts","../../versions/src/lib/checkFuelCoreVersionCompatibility.ts","../../versions/src/index.ts","../../errors/src/error-codes.ts","../../errors/src/fuel-error.ts","../../utils/src/utils/arrayify.ts","../../utils/src/utils/hexlify.ts","../../utils/src/utils/normalizeString.ts","../../math/src/bn.ts","../../math/src/configs.ts","../../math/src/decimal.ts","../../math/src/functional.ts","../../math/src/math.ts","../src/coders/u64.ts","../src/constants.ts","../src/utilities.ts","../src/coders/array.ts","../src/coders/b256.ts","../src/coders/b512.ts","../src/coders/boolean.ts","../src/coders/enum.ts","../src/coders/number.ts","../src/coders/string.ts","../src/coders/option.ts","../src/coders/struct.ts","../src/coders/tuple.ts","../src/coders/vec.ts","../src/coders/byte.ts","../src/coders/raw-slice.ts","../src/coders/stdString.ts","../src/resolved-abi-type.ts","../src/abi-coder.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.1/node_modules/@noble/hashes/src/_assert.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.1/node_modules/@noble/hashes/src/cryptoNode.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.1/node_modules/@noble/hashes/src/utils.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.1/node_modules/@noble/hashes/src/_sha2.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.1/node_modules/@noble/hashes/src/sha256.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.1/node_modules/@noble/hashes/src/hmac.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.1/node_modules/@noble/hashes/src/pbkdf2.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.1/node_modules/@noble/hashes/src/scrypt.ts","../../../node_modules/.pnpm/ethereum-cryptography@2.1.2/node_modules/ethereum-cryptography/esm/utils.js","../../../node_modules/.pnpm/ethereum-cryptography@2.1.2/node_modules/ethereum-cryptography/esm/scrypt.js","../../../node_modules/.pnpm/@noble+hashes@1.3.1/node_modules/@noble/hashes/src/_u64.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.1/node_modules/@noble/hashes/src/sha3.ts","../../../node_modules/.pnpm/ethereum-cryptography@2.1.2/node_modules/ethereum-cryptography/esm/keccak.js","../../crypto/src/shared/scrypt.ts","../../crypto/src/shared/keccak256.ts","../../crypto/src/node/aes-ctr.ts","../../crypto/src/node/bufferFromString.ts","../../crypto/src/node/randomBytes.ts","../../crypto/src/node/stringFromBuffer.ts","../../crypto/src/node/encryptJsonWalletData.ts","../../crypto/src/node/index.ts","../../crypto/src/index.ts","../src/function-fragment.ts","../src/interface.ts"],"sourcesContent":["// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((o, k) => {\n    o[k] = true\n    return o\n  }, {})\nmodule.exports = parseOptions\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const { MAX_LENGTH } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceTilde(c, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceCaret(c, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((c) => {\n    return replaceXRange(c, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false,\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = [new Comparator('>=0.0.0-0')]\n    } else {\n      sub = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","export function getBuiltinVersions() {\n  return {\n    FORC: '0.46.1',\n    FUEL_CORE: '0.20.8',\n    FUELS: '0.69.1',\n  };\n}\n","import semver from 'semver';\n\nimport { getBuiltinVersions } from './getBuiltinVersions';\n\nexport function checkFuelCoreVersionCompatibility(networkVersion: string) {\n  const { FUEL_CORE: supportedVersion } = getBuiltinVersions();\n\n  const networkMajor = semver.major(networkVersion);\n  const networkMinor = semver.minor(networkVersion);\n  const networkPatch = semver.patch(networkVersion);\n\n  const supportedMajor = semver.major(supportedVersion);\n  const supportedMinor = semver.minor(supportedVersion);\n  const supportedPatch = semver.patch(supportedVersion);\n\n  return {\n    supportedVersion,\n    isMajorSupported: networkMajor === supportedMajor,\n    isMinorSupported: networkMinor === supportedMinor,\n    isPatchSupported: networkPatch === supportedPatch,\n  };\n}\n","/*\n  1) Variables\n  ------------\n    `FUELS` — comes from `/packages/fuels/package.json`\n    `FUEL_CORE` — comes from `/packages/fuel-core/VERSION`\n    `FORC` — comes from `/packages/forc/VERSION`\n\n  3) Pre Build\n  ------------\n    There's a `prebuild` script in:\n     - packages/versions/package.json\n\n    Before build, it will call this file:\n      - packages/versions/scripts/replaceVersions.ts\n\n    Which will replace static versions at:\n      - packages/versions/src/lib/getBuiltinVersions.ts\n\n    If no env variables are set, it uses the current versions\n    from the original locations mentioned in the 1st step.\n\n  3)  CI\n  ------------\n    As part of the CI release (1) routine, the changes made\n    to the versions package by the `prebuild` routine will\n    be committed by the same script (2) that handles the\n    docs versioning.\n\n      - (1) <repoRoot>/.github/workflows/release.yaml\n      - (2) <repoRoot>/changeset-version-with-docs.ts\n\n  4) Build\n  ------------\n    By the time we get to the `build` step, everything is in\n    place already and ready to be built and released.\n*/\n\nimport { getBuiltinVersions } from './lib/getBuiltinVersions';\n\nexport const versions = getBuiltinVersions();\n\nexport * from './lib/checkFuelCoreVersionCompatibility';\n","/**\n * Represents the different error codes thrown by the SDK\n */\nexport enum ErrorCode {\n  // abi\n  NO_ABIS_FOUND = 'no-abis-found',\n  ABI_TYPES_AND_VALUES_MISMATCH = 'abi-types-and-values-mismatch',\n  ABI_MAIN_METHOD_MISSING = 'abi-main-method-missing',\n  INVALID_COMPONENT = 'invalid-component',\n  FRAGMENT_NOT_FOUND = 'fragment-not-found',\n  CONFIGURABLE_NOT_FOUND = 'configurable-not-found',\n  TYPE_NOT_FOUND = 'type-not-found',\n  TYPE_NOT_SUPPORTED = 'type-not-supported',\n  INVALID_DECODE_VALUE = 'invalid-decode-value',\n  JSON_ABI_ERROR = 'json-abi-error',\n  TYPE_ID_NOT_FOUND = 'type-id-not-found',\n  BIN_FILE_NOT_FOUND = 'bin-file-not-found',\n  CODER_NOT_FOUND = 'coder-not-found',\n  INVALID_DATA = 'invalid-data',\n  FUNCTION_NOT_FOUND = 'function-not-found',\n\n  // address\n  INVALID_BECH32_ADDRESS = 'invalid-bech32-address',\n  INVALID_EVM_ADDRESS = 'invalid-evm-address',\n  INVALID_B256_ADDRESS = 'invalid-b256-address',\n\n  // provider\n  INVALID_URL = 'invalid-url',\n  CHAIN_INFO_CACHE_EMPTY = 'chain-info-cache-empty',\n  NODE_INFO_CACHE_EMPTY = 'node-info-cache-empty',\n  MISSING_PROVIDER = 'missing-provider',\n\n  // wallet\n  INVALID_PUBLIC_KEY = 'invalid-public-key',\n  INSUFFICIENT_BALANCE = 'insufficient-balance',\n  WALLET_MANAGER_ERROR = 'wallet-manager-error',\n  HD_WALLET_ERROR = 'hd-wallet-error',\n\n  // errors\n  PARSE_FAILED = 'parse-failed',\n  ENCODE_ERROR = 'encode-error',\n  DECODE_ERROR = 'decode-error',\n  INVALID_CREDENTIALS = 'invalid-credentials',\n  ENV_DEPENDENCY_MISSING = 'env-dependency-missing',\n  INVALID_TTL = 'invalid-ttl',\n  INVALID_INPUT_PARAMETERS = 'invalid-input-parameters',\n  NOT_IMPLEMENTED = 'not-implemented',\n  NOT_SUPPORTED = 'not-supported',\n  CONVERTING_FAILED = 'converting-error',\n  ELEMENT_NOT_FOUND = 'element-not-found',\n  MISSING_REQUIRED_PARAMETER = 'missing-required-parameter',\n  UNEXPECTED_HEX_VALUE = 'unexpected-hex-value',\n\n  // transaction\n  GAS_PRICE_TOO_LOW = 'gas-price-too-low',\n  GAS_LIMIT_TOO_LOW = 'gas-limit-too-low',\n  TRANSACTION_NOT_FOUND = 'transaction-not-found',\n  TRANSACTION_FAILED = 'transaction-failed',\n  INVALID_CONFIGURABLE_CONSTANTS = 'invalid-configurable-constants',\n  INVALID_TRANSACTION_INPUT = 'invalid-transaction-input',\n  INVALID_TRANSACTION_OUTPUT = 'invalid-transaction-output',\n  INVALID_TRANSACTION_STATUS = 'invalid-transaction-status',\n  INVALID_TRANSACTION_TYPE = 'invalid-transaction-type',\n  TRANSACTION_ERROR = 'transaction-error',\n\n  // receipt\n  INVALID_RECEIPT_TYPE = 'invalid-receipt-type',\n\n  // mnemonic\n  INVALID_WORD_LIST = 'invalid-word-list',\n  INVALID_MNEMONIC = 'invalid-mnemonic',\n  INVALID_ENTROPY = 'invalid-entropy',\n  INVALID_SEED = 'invalid-seed',\n  INVALID_CHECKSUM = 'invalid-checksum',\n\n  // wallet / account\n  INVALID_PASSWORD = 'invalid-password',\n  ACCOUNT_REQUIRED = 'account-required',\n\n  // chain\n  LATEST_BLOCK_UNAVAILABLE = 'latest-block-unavailable',\n  ERROR_BUILDING_BLOCK_EXPLORER_URL = 'error-building-block-explorer-url',\n  UNSUPPORTED_FUEL_CLIENT_VERSION = 'unsupported-fuel-client-version',\n\n  // docs\n  VITEPRESS_PLUGIN_ERROR = 'vitepress-plugin-error',\n\n  // contract\n  INVALID_MULTICALL = 'invalid-multicall',\n\n  // script\n  SCRIPT_REVERTED = 'script-reverted',\n  SCRIPT_RETURN_INVALID_TYPE = 'script-return-invalid-type',\n\n  // coder\n  // ...\n}\n","import { versions } from '@fuel-ts/versions';\n\nimport { ErrorCode } from './error-codes';\n\nexport class FuelError extends Error {\n  static readonly CODES = ErrorCode;\n  readonly VERSIONS = versions;\n\n  static parse(e: unknown) {\n    const error = e as FuelError;\n\n    if (error.code === undefined) {\n      throw new FuelError(\n        ErrorCode.PARSE_FAILED,\n        \"Failed to parse the error object. The required 'code' property is missing.\"\n      );\n    }\n\n    const enumValues = Object.values(ErrorCode);\n    const codeIsKnown = enumValues.includes(error.code);\n\n    if (!codeIsKnown) {\n      throw new FuelError(\n        ErrorCode.PARSE_FAILED,\n        `Unknown error code: ${error.code}. Accepted codes: ${enumValues.join(', ')}.`\n      );\n    }\n\n    return new FuelError(error.code, error.message);\n  }\n\n  code: ErrorCode;\n\n  constructor(code: ErrorCode, message: string) {\n    super(message);\n    this.code = code;\n    this.name = 'FuelError';\n  }\n\n  toObject() {\n    const { code, name, message, VERSIONS } = this;\n    return { code, name, message, VERSIONS };\n  }\n}\n","import { FuelError, type ErrorCode } from '@fuel-ts/errors';\nimport type { BN } from '@fuel-ts/math';\nimport type { BytesLike } from 'ethers';\n\nimport type { Option } from './option';\n\ntype Primitive = string | number | boolean;\n\n/**\n * The type of value you can provide to `Coder.encode`\n */\nexport type InputValue<T = void> =\n  | Primitive\n  | BN\n  | Option<T>\n  | BytesLike\n  | InputValue[]\n  | { [key: string]: InputValue }\n  | Record<string, Primitive | BytesLike>;\n\n/**\n * The type of value you can get from `Coder.decode`\n */\nexport type DecodedValue =\n  | Primitive\n  | DecodedValue[]\n  | { [key: string]: DecodedValue }\n  | Record<string, Primitive>;\n\nexport type TypesOfCoder<TCoder> = TCoder extends Coder<infer TInput, infer TDecoded>\n  ? { Input: TInput; Decoded: TDecoded }\n  : never;\n\nexport abstract class Coder<TInput = unknown, TDecoded = unknown> {\n  readonly name: string;\n  readonly type: string;\n  readonly encodedLength: number;\n\n  constructor(name: string, type: string, encodedLength: number) {\n    this.name = name;\n    this.type = type;\n    this.encodedLength = encodedLength;\n  }\n\n  throwError(errorCode: ErrorCode, message: string): never {\n    throw new FuelError(errorCode, message);\n  }\n\n  abstract encode(value: TInput, length?: number): Uint8Array;\n\n  abstract decode(data: Uint8Array, offset: number, length?: number): [TDecoded, number];\n}\n","/* Do NOT modify this file; see /src.ts/_admin/update-version.ts */\n\n/**\n *  The current version of Ethers.\n */\nexport const version: string = \"6.7.1\";\n","/**\n *  Property helper functions.\n *\n *  @_subsection api/utils:Properties  [about-properties]\n */\n\nfunction checkType(value: any, type: string, name: string): void {\n    const types = type.split(\"|\").map(t => t.trim());\n    for (let i = 0; i < types.length; i++) {\n        switch (type) {\n            case \"any\":\n                return;\n            case \"bigint\":\n            case \"boolean\":\n            case \"number\":\n            case \"string\":\n                if (typeof(value) === type) { return; }\n        }\n    }\n\n    const error: any = new Error(`invalid value for type ${ type }`);\n    error.code = \"INVALID_ARGUMENT\";\n    error.argument = `value.${ name }`;\n    error.value = value;\n\n    throw error;\n}\n\n/**\n *  Resolves to a new object that is a copy of %%value%%, but with all\n *  values resolved.\n */\nexport async function resolveProperties<T>(value: { [ P in keyof T ]: T[P] | Promise<T[P]>}): Promise<T> {\n    const keys = Object.keys(value);\n    const results = await Promise.all(keys.map((k) => Promise.resolve(value[<keyof T>k])));\n    return results.reduce((accum: any, v, index) => {\n        accum[keys[index]] = v;\n        return accum;\n    }, <{ [ P in keyof T]: T[P] }>{ });\n}\n\n/**\n *  Assigns the %%values%% to %%target%% as read-only values.\n *\n *  It %%types%% is specified, the values are checked.\n */\nexport function defineProperties<T>(\n target: T,\n values: { [ K in keyof T ]?: T[K] },\n types?: { [ K in keyof T ]?: string }): void {\n\n    for (let key in values) {\n        let value = values[key];\n\n        const type = (types ? types[key]: null);\n        if (type) { checkType(value, type, key); }\n\n        Object.defineProperty(target, key, { enumerable: true, value, writable: false });\n    }\n}\n","/**\n *  All errors in ethers include properties to ensure they are both\n *  human-readable (i.e. ``.message``) and machine-readable (i.e. ``.code``).\n *\n *  The [[isError]] function can be used to check the error ``code`` and\n *  provide a type guard for the properties present on that error interface.\n *\n *  @_section: api/utils/errors:Errors  [about-errors]\n */\n\nimport { version } from \"../_version.js\";\n\nimport { defineProperties } from \"./properties.js\";\n\nimport type {\n    TransactionRequest, TransactionReceipt, TransactionResponse\n} from \"../providers/index.js\";\n\nimport type { FetchRequest, FetchResponse } from \"./fetch.js\";\n\n/**\n *  An error may contain additional properties, but those must not\n *  conflict with any impliciat properties.\n */\nexport type ErrorInfo<T> = Omit<T, \"code\" | \"name\" | \"message\">;\n\n\nfunction stringify(value: any): any {\n    if (value == null) { return \"null\"; }\n\n    if (Array.isArray(value)) {\n        return \"[ \" + (value.map(stringify)).join(\", \") + \" ]\";\n    }\n\n    if (value instanceof Uint8Array) {\n        const HEX = \"0123456789abcdef\";\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            result += HEX[value[i] >> 4];\n            result += HEX[value[i] & 0xf];\n        }\n        return result;\n    }\n\n    if (typeof(value) === \"object\" && typeof(value.toJSON) === \"function\") {\n        return stringify(value.toJSON());\n    }\n\n    switch (typeof(value)) {\n        case \"boolean\": case \"symbol\":\n            return value.toString();\n        case \"bigint\":\n            return BigInt(value).toString();\n        case \"number\":\n            return (value).toString();\n        case \"string\":\n            return JSON.stringify(value);\n        case \"object\": {\n            const keys = Object.keys(value);\n            keys.sort();\n            return \"{ \" + keys.map((k) => `${ stringify(k) }: ${ stringify(value[k]) }`).join(\", \") + \" }\";\n        }\n    }\n\n    return `[ COULD NOT SERIALIZE ]`;\n}\n\n/**\n *  All errors emitted by ethers have an **ErrorCode** to help\n *  identify and coalesce errors to simplfy programatic analysis.\n *\n *  Each **ErrorCode** is the %%code%% proerty of a coresponding\n *  [[EthersError]].\n *\n *  **Generic Errors**\n *\n *  **``\"UNKNOWN_ERROR\"``** - see [[UnknownError]]\n *\n *  **``\"NOT_IMPLEMENTED\"``** - see [[NotImplementedError]]\n *\n *  **``\"UNSUPPORTED_OPERATION\"``** - see [[UnsupportedOperationError]]\n *\n *  **``\"NETWORK_ERROR\"``** - see [[NetworkError]]\n *\n *  **``\"SERVER_ERROR\"``** - see [[ServerError]]\n *\n *  **``\"TIMEOUT\"``** - see [[TimeoutError]]\n *\n *  **``\"BAD_DATA\"``** - see [[BadDataError]]\n *\n *  **``\"CANCELLED\"``** - see [[CancelledError]]\n *\n *  **Operational Errors**\n *\n *  **``\"BUFFER_OVERRUN\"``** - see [[BufferOverrunError]]\n *\n *  **``\"NUMERIC_FAULT\"``** - see [[NumericFaultError]]\n *\n *  **Argument Errors**\n *\n *  **``\"INVALID_ARGUMENT\"``** - see [[InvalidArgumentError]]\n *\n *  **``\"MISSING_ARGUMENT\"``** - see [[MissingArgumentError]]\n *\n *  **``\"UNEXPECTED_ARGUMENT\"``** - see [[UnexpectedArgumentError]]\n *\n *  **``\"VALUE_MISMATCH\"``** - //unused//\n *\n *  **Blockchain Errors**\n *\n *  **``\"CALL_EXCEPTION\"``** - see [[CallExceptionError]]\n *\n *  **``\"INSUFFICIENT_FUNDS\"``** - see [[InsufficientFundsError]]\n *\n *  **``\"NONCE_EXPIRED\"``** - see [[NonceExpiredError]]\n *\n *  **``\"REPLACEMENT_UNDERPRICED\"``** - see [[ReplacementUnderpricedError]]\n *\n *  **``\"TRANSACTION_REPLACED\"``** - see [[TransactionReplacedError]]\n *\n *  **``\"UNCONFIGURED_NAME\"``** - see [[UnconfiguredNameError]]\n *\n *  **``\"OFFCHAIN_FAULT\"``** - see [[OffchainFaultError]]\n *\n *  **User Interaction Errors**\n *\n *  **``\"ACTION_REJECTED\"``** - see [[ActionRejectedError]]\n */\nexport type ErrorCode =\n\n    // Generic Errors\n    \"UNKNOWN_ERROR\" | \"NOT_IMPLEMENTED\" | \"UNSUPPORTED_OPERATION\" |\n    \"NETWORK_ERROR\" | \"SERVER_ERROR\" | \"TIMEOUT\" | \"BAD_DATA\" |\n    \"CANCELLED\" |\n\n    // Operational Errors\n    \"BUFFER_OVERRUN\" |  \"NUMERIC_FAULT\" |\n\n    // Argument Errors\n    \"INVALID_ARGUMENT\" | \"MISSING_ARGUMENT\" | \"UNEXPECTED_ARGUMENT\" |\n    \"VALUE_MISMATCH\" |\n\n    // Blockchain Errors\n    \"CALL_EXCEPTION\" | \"INSUFFICIENT_FUNDS\" | \"NONCE_EXPIRED\" |\n    \"REPLACEMENT_UNDERPRICED\" | \"TRANSACTION_REPLACED\" |\n    \"UNCONFIGURED_NAME\" | \"OFFCHAIN_FAULT\" |\n\n    // User Interaction\n    \"ACTION_REJECTED\"\n;\n\n/**\n *  All errors in Ethers include properties to assist in\n *  machine-readable errors.\n */\nexport interface EthersError<T extends ErrorCode = ErrorCode> extends Error {\n    /**\n     *  The string error code.\n     */\n    code: ErrorCode;\n\n    /**\n     *  Additional info regarding the error that may be useful.\n     *\n     *  This is generally helpful mostly for human-based debugging.\n     */\n    info?: Record<string, any>;\n\n    /**\n     *  Any related error.\n     */\n    error?: Error;\n}\n\n// Generic Errors\n\n/**\n *  This Error is a catch-all for when there is no way for Ethers to\n *  know what the underlying problem is.\n */\nexport interface UnknownError extends EthersError<\"UNKNOWN_ERROR\"> {\n    [ key: string ]: any;\n}\n\n/**\n *  This Error is mostly used as a stub for functionality that is\n *  intended for the future, but is currently not implemented.\n */\nexport interface NotImplementedError extends EthersError<\"NOT_IMPLEMENTED\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n}\n\n/**\n *  This Error indicates that the attempted operation is not supported.\n *\n *  This could range from a specifc JSON-RPC end-point not supporting\n *  a feature to a specific configuration of an object prohibiting the\n *  operation.\n *\n *  For example, a [[Wallet]] with no connected [[Provider]] is unable\n *  to send a transaction.\n */\nexport interface UnsupportedOperationError extends EthersError<\"UNSUPPORTED_OPERATION\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n}\n\n/**\n *  This Error indicates a proplem connecting to a network.\n */\nexport interface NetworkError extends EthersError<\"NETWORK_ERROR\"> {\n    /**\n     *  The network event.\n     */\n    event: string;\n}\n\n/**\n *  This Error indicates there was a problem fetching a resource from\n *  a server.\n */\nexport interface ServerError extends EthersError<\"SERVER_ERROR\"> {\n    /**\n     *  The requested resource.\n     */\n    request: FetchRequest | string;\n\n    /**\n     *  The response received from the server, if available.\n     */\n    response?: FetchResponse;\n}\n\n/**\n *  This Error indicates that the timeout duration has expired and\n *  that the operation has been implicitly cancelled.\n *\n *  The side-effect of the operation may still occur, as this\n *  generally means a request has been sent and there has simply\n *  been no response to indicate whether it was processed or not.\n */\nexport interface TimeoutError extends EthersError<\"TIMEOUT\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n\n    /**\n     *  The reason.\n     */\n    reason: string;\n\n    /**\n     *  The resource request, if available.\n     */\n    request?: FetchRequest;\n}\n\n/**\n *  This Error indicates that a provided set of data cannot\n *  be correctly interpretted.\n */\nexport interface BadDataError extends EthersError<\"BAD_DATA\"> {\n    /**\n     *  The data.\n     */\n    value: any;\n}\n\n/**\n *  This Error indicates that the operation was cancelled by a\n *  programmatic call, for example to ``cancel()``.\n */\nexport interface CancelledError extends EthersError<\"CANCELLED\"> {\n}\n\n\n// Operational Errors\n\n/**\n *  This Error indicates an attempt was made to read outside the bounds\n *  of protected data.\n *\n *  Most operations in Ethers are protected by bounds checks, to mitigate\n *  exploits when parsing data.\n */\nexport interface BufferOverrunError extends EthersError<\"BUFFER_OVERRUN\"> {\n    /**\n     *  The buffer that was overrun.\n     */\n    buffer: Uint8Array;\n\n    /**\n     *  The length of the buffer.\n     */\n    length: number;\n\n    /**\n     *  The offset that was requested.\n     */\n    offset: number;\n}\n\n/**\n *  This Error indicates an operation which would result in incorrect\n *  arithmetic output has occurred.\n *\n *  For example, trying to divide by zero or using a ``uint8`` to store\n *  a negative value.\n */\nexport interface NumericFaultError extends EthersError<\"NUMERIC_FAULT\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n\n    /**\n     *  The fault reported.\n     */\n    fault: string;\n\n    /**\n     *  The value the operation was attempted against.\n     */\n    value: any;\n}\n\n\n// Argument Errors\n\n/**\n *  This Error indicates an incorrect type or value was passed to\n *  a function or method.\n */\nexport interface InvalidArgumentError extends EthersError<\"INVALID_ARGUMENT\"> {\n    /**\n     *  The name of the argument.\n     */\n    argument: string;\n\n    /**\n     *  The value that was provided.\n     */\n    value: any;\n\n    info?: Record<string, any>\n}\n\n/**\n *  This Error indicates there were too few arguments were provided.\n */\nexport interface MissingArgumentError extends EthersError<\"MISSING_ARGUMENT\"> {\n    /**\n     *  The number of arguments received.\n     */\n    count: number;\n\n    /**\n     *  The number of arguments expected.\n     */\n    expectedCount: number;\n}\n\n/**\n *  This Error indicates too many arguments were provided.\n */\nexport interface UnexpectedArgumentError extends EthersError<\"UNEXPECTED_ARGUMENT\"> {\n    /**\n     *  The number of arguments received.\n     */\n    count: number;\n\n    /**\n     *  The number of arguments expected.\n     */\n    expectedCount: number;\n}\n\n\n// Blockchain Errors\n\n/**\n *  The action that resulted in the call exception.\n */\nexport type CallExceptionAction = \"call\" | \"estimateGas\" | \"getTransactionResult\" | \"sendTransaction\" | \"unknown\";\n\n/**\n *  The related transaction that caused the error.\n */\nexport type CallExceptionTransaction = {\n    to: null | string;\n    from?: string;\n    data: string;\n};\n\n/**\n *  This **Error** indicates a transaction reverted.\n */\nexport interface CallExceptionError extends EthersError<\"CALL_EXCEPTION\"> {\n\n    /**\n     *  The action being performed when the revert was encountered.\n     */\n    action: CallExceptionAction;\n\n    /**\n     *  The revert data returned.\n     */\n    data: null | string;\n\n    /**\n     *  A human-readable representation of data, if possible.\n     */\n    reason: null | string;\n\n    /**\n     *  The transaction that triggered the exception.\n     */\n    transaction: CallExceptionTransaction,\n\n    /**\n     *  The contract invocation details, if available.\n     */\n    invocation: null | {\n        method: string;\n        signature: string;\n        args: Array<any>;\n    }\n\n    /**\n     *  The built-in or custom revert error, if available\n     */\n    revert: null | {\n        signature: string;\n        name: string;\n        args: Array<any>;\n    }\n\n    /**\n     *  If the error occurred in a transaction that was mined\n     *  (with a status of ``0``), this is the receipt.\n     */\n    receipt?: TransactionReceipt;   // @TODO: in v7, make this `null | TransactionReceipt`\n}\n\n\n/**\n *  The sending account has insufficient funds to cover the\n *  entire transaction cost.\n */\nexport interface InsufficientFundsError extends EthersError<\"INSUFFICIENT_FUNDS\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  The sending account has already used this nonce in a\n *  transaction that has been included.\n */\nexport interface NonceExpiredError extends EthersError<\"NONCE_EXPIRED\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  A CCIP-read exception, which cannot be recovered from or\n *  be further processed.\n */\nexport interface OffchainFaultError extends EthersError<\"OFFCHAIN_FAULT\"> {\n    /**\n     *  The transaction.\n     */\n    transaction?: TransactionRequest;\n\n    /**\n     *  The reason the CCIP-read failed.\n     */\n    reason: string;\n}\n\n/**\n *  An attempt was made to replace a transaction, but with an\n *  insufficient additional fee to afford evicting the old\n *  transaction from the memory pool.\n */\nexport interface ReplacementUnderpricedError extends EthersError<\"REPLACEMENT_UNDERPRICED\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  A pending transaction was replaced by another.\n */\nexport interface TransactionReplacedError extends EthersError<\"TRANSACTION_REPLACED\"> {\n    /**\n     *  If the transaction was cancelled, such that the original\n     *  effects of the transaction cannot be assured.\n     */\n    cancelled: boolean;\n\n    /**\n     *  The reason the transaction was replaced.\n     */\n    reason: \"repriced\" | \"cancelled\" | \"replaced\";\n\n    /**\n     *  The hash of the replaced transaction.\n     */\n    hash: string;\n\n    /**\n     *  The transaction that replaced the transaction.\n     */\n    replacement: TransactionResponse;\n\n    /**\n     *  The receipt of the transaction that replace the transaction.\n     */\n    receipt: TransactionReceipt;\n}\n\n/**\n *  This Error indicates an ENS name was used, but the name has not\n *  been configured.\n *\n *  This could indicate an ENS name is unowned or that the current\n *  address being pointed to is the [[ZeroAddress]].\n */\nexport interface UnconfiguredNameError extends EthersError<\"UNCONFIGURED_NAME\"> {\n    /**\n     *  The ENS name that was requested\n     */\n    value: string;\n}\n\n/**\n *  This Error indicates a request was rejected by the user.\n *\n *  In most clients (such as MetaMask), when an operation requires user\n *  authorization (such as ``signer.sendTransaction``), the client\n *  presents a dialog box to the user. If the user denies the request\n *  this error is thrown.\n */\nexport interface ActionRejectedError extends EthersError<\"ACTION_REJECTED\"> {\n    /**\n     *  The requested action.\n     */\n    action: \"requestAccess\" | \"sendTransaction\" | \"signMessage\" | \"signTransaction\" | \"signTypedData\" | \"unknown\",\n\n    /**\n     *  The reason the action was rejected.\n     *\n     *  If there is already a pending request, some clients may indicate\n     *  there is already a ``\"pending\"`` action. This prevents an app\n     *  from spamming the user.\n     */\n    reason: \"expired\" | \"rejected\" | \"pending\"\n}\n\n// Coding; converts an ErrorCode its Typed Error\n\n/**\n *  A conditional type that transforms the [[ErrorCode]] T into\n *  its EthersError type.\n *\n *  @flatworm-skip-docs\n */\nexport type CodedEthersError<T> =\n    T extends \"UNKNOWN_ERROR\" ? UnknownError:\n    T extends \"NOT_IMPLEMENTED\" ? NotImplementedError:\n    T extends \"UNSUPPORTED_OPERATION\" ? UnsupportedOperationError:\n    T extends \"NETWORK_ERROR\" ? NetworkError:\n    T extends \"SERVER_ERROR\" ? ServerError:\n    T extends \"TIMEOUT\" ? TimeoutError:\n    T extends \"BAD_DATA\" ? BadDataError:\n    T extends \"CANCELLED\" ? CancelledError:\n\n    T extends \"BUFFER_OVERRUN\" ? BufferOverrunError:\n    T extends \"NUMERIC_FAULT\" ? NumericFaultError:\n\n    T extends \"INVALID_ARGUMENT\" ? InvalidArgumentError:\n    T extends \"MISSING_ARGUMENT\" ? MissingArgumentError:\n    T extends \"UNEXPECTED_ARGUMENT\" ? UnexpectedArgumentError:\n\n    T extends \"CALL_EXCEPTION\" ? CallExceptionError:\n    T extends \"INSUFFICIENT_FUNDS\" ? InsufficientFundsError:\n    T extends \"NONCE_EXPIRED\" ? NonceExpiredError:\n    T extends \"OFFCHAIN_FAULT\" ? OffchainFaultError:\n    T extends \"REPLACEMENT_UNDERPRICED\" ? ReplacementUnderpricedError:\n    T extends \"TRANSACTION_REPLACED\" ? TransactionReplacedError:\n    T extends \"UNCONFIGURED_NAME\" ? UnconfiguredNameError:\n\n    T extends \"ACTION_REJECTED\" ? ActionRejectedError:\n\n    never;\n\n\n\n/**\n *  Returns true if the %%error%% matches an error thrown by ethers\n *  that matches the error %%code%%.\n *\n *  In TypeScript envornoments, this can be used to check that %%error%%\n *  matches an EthersError type, which means the expected properties will\n *  be set.\n *\n *  @See [ErrorCodes](api:ErrorCode)\n *  @example\n *    try {\n *      // code....\n *    } catch (e) {\n *      if (isError(e, \"CALL_EXCEPTION\")) {\n *          // The Type Guard has validated this object\n *          console.log(e.data);\n *      }\n *    }\n */\nexport function isError<K extends ErrorCode, T extends CodedEthersError<K>>(error: any, code: K): error is T {\n    return (error && (<EthersError>error).code === code);\n}\n\n/**\n *  Returns true if %%error%% is a [[CallExceptionError].\n */\nexport function isCallException(error: any): error is CallExceptionError {\n    return isError(error, \"CALL_EXCEPTION\");\n}\n\n/**\n *  Returns a new Error configured to the format ethers emits errors, with\n *  the %%message%%, [[api:ErrorCode]] %%code%% and additioanl properties\n *  for the corresponding EthersError.\n *\n *  Each error in ethers includes the version of ethers, a\n *  machine-readable [[ErrorCode]], and depneding on %%code%%, additional\n *  required properties. The error message will also include the %%meeage%%,\n *  ethers version, %%code%% and all aditional properties, serialized.\n */\nexport function makeError<K extends ErrorCode, T extends CodedEthersError<K>>(message: string, code: K, info?: ErrorInfo<T>): T {\n    {\n        const details: Array<string> = [];\n        if (info) {\n            if (\"message\" in info || \"code\" in info || \"name\" in info) {\n                throw new Error(`value will overwrite populated values: ${ stringify(info) }`);\n            }\n            for (const key in info) {\n                const value = <any>(info[<keyof ErrorInfo<T>>key]);\n//                try {\n                    details.push(key + \"=\" + stringify(value));\n//                } catch (error: any) {\n//                console.log(\"MMM\", error.message);\n//                    details.push(key + \"=[could not serialize object]\");\n//                }\n            }\n        }\n        details.push(`code=${ code }`);\n        details.push(`version=${ version }`);\n\n        if (details.length) {\n            message += \" (\" + details.join(\", \") + \")\";\n        }\n    }\n\n    let error;\n    switch (code) {\n        case \"INVALID_ARGUMENT\":\n            error = new TypeError(message);\n            break;\n        case \"NUMERIC_FAULT\":\n        case \"BUFFER_OVERRUN\":\n            error = new RangeError(message);\n            break;\n        default:\n            error = new Error(message);\n    }\n\n    defineProperties<EthersError>(<EthersError>error, { code });\n\n    if (info) { Object.assign(error, info); }\n\n    return <T>error;\n}\n\n/**\n *  Throws an EthersError with %%message%%, %%code%% and additional error\n *  %%info%% when %%check%% is falsish..\n *\n *  @see [[api:makeError]]\n */\nexport function assert<K extends ErrorCode, T extends CodedEthersError<K>>(check: unknown, message: string, code: K, info?: ErrorInfo<T>): asserts check {\n    if (!check) { throw makeError(message, code, info); }\n}\n\n\n/**\n *  A simple helper to simply ensuring provided arguments match expected\n *  constraints, throwing if not.\n *\n *  In TypeScript environments, the %%check%% has been asserted true, so\n *  any further code does not need additional compile-time checks.\n */\nexport function assertArgument(check: unknown, message: string, name: string, value: unknown): asserts check {\n    assert(check, message, \"INVALID_ARGUMENT\", { argument: name, value: value });\n}\n\nexport function assertArgumentCount(count: number, expectedCount: number, message?: string): void {\n    if (message == null) { message = \"\"; }\n    if (message) { message = \": \" + message; }\n\n    assert(count >= expectedCount, \"missing arguemnt\" + message, \"MISSING_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n\n    assert(count <= expectedCount, \"too many arguemnts\" + message, \"UNEXPECTED_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n}\n\nconst _normalizeForms = [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].reduce((accum, form) => {\n    try {\n        // General test for normalize\n        /* c8 ignore start */\n        if (\"test\".normalize(form) !== \"test\") { throw new Error(\"bad\"); };\n        /* c8 ignore stop */\n\n        if (form === \"NFD\") {\n            const check = String.fromCharCode(0xe9).normalize(\"NFD\");\n            const expected = String.fromCharCode(0x65, 0x0301)\n            /* c8 ignore start */\n            if (check !== expected) { throw new Error(\"broken\") }\n            /* c8 ignore stop */\n        }\n\n        accum.push(form);\n    } catch(error) { }\n\n    return accum;\n}, <Array<string>>[]);\n\n/**\n *  Throws if the normalization %%form%% is not supported.\n */\nexport function assertNormalize(form: string): void {\n    assert(_normalizeForms.indexOf(form) >= 0, \"platform missing String.prototype.normalize\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"String.prototype.normalize\", info: { form }\n    });\n}\n\n/**\n *  Many classes use file-scoped values to guard the constructor,\n *  making it effectively private. This facilitates that pattern\n *  by ensuring the %%givenGaurd%% matches the file-scoped %%guard%%,\n *  throwing if not, indicating the %%className%% if provided.\n */\nexport function assertPrivate(givenGuard: any, guard: any, className?: string): void {\n    if (className == null) { className = \"\"; }\n    if (givenGuard !== guard) {\n        let method = className, operation = \"new\";\n        if (className) {\n            method += \".\";\n            operation += \" \" + className;\n        }\n        assert(false, `private constructor; use ${ method }from* methods`, \"UNSUPPORTED_OPERATION\", {\n            operation\n        });\n    }\n}\n","/**\n *  Some data helpers.\n *\n *\n *  @_subsection api/utils:Data Helpers  [about-data]\n */\nimport { assert, assertArgument } from \"./errors.js\";\n\n/**\n *  A [[HexString]] whose length is even, which ensures it is a valid\n *  representation of binary data.\n */\nexport type DataHexString = string;\n\n/**\n *  A string which is prefixed with ``0x`` and followed by any number\n *  of case-agnostic hexadecimal characters.\n *\n *  It must match the regular expression ``/0x[0-9A-Fa-f]*\\/``.\n */\nexport type HexString = string;\n\n/**\n *  An object that can be used to represent binary data.\n */\nexport type BytesLike = DataHexString | Uint8Array;\n\nfunction _getBytes(value: BytesLike, name?: string, copy?: boolean): Uint8Array {\n    if (value instanceof Uint8Array) {\n        if (copy) { return new Uint8Array(value); }\n        return value;\n    }\n\n    if (typeof(value) === \"string\" && value.match(/^0x([0-9a-f][0-9a-f])*$/i)) {\n        const result = new Uint8Array((value.length - 2) / 2);\n        let offset = 2;\n        for (let i = 0; i < result.length; i++) {\n            result[i] = parseInt(value.substring(offset, offset + 2), 16);\n            offset += 2;\n        }\n        return result;\n    }\n\n    assertArgument(false, \"invalid BytesLike value\", name || \"value\", value);\n}\n\n/**\n *  Get a typed Uint8Array for %%value%%. If already a Uint8Array\n *  the original %%value%% is returned; if a copy is required use\n *  [[getBytesCopy]].\n *\n *  @see: getBytesCopy\n */\nexport function getBytes(value: BytesLike, name?: string): Uint8Array {\n    return _getBytes(value, name, false);\n}\n\n/**\n *  Get a typed Uint8Array for %%value%%, creating a copy if necessary\n *  to prevent any modifications of the returned value from being\n *  reflected elsewhere.\n *\n *  @see: getBytes\n */\nexport function getBytesCopy(value: BytesLike, name?: string): Uint8Array {\n    return _getBytes(value, name, true);\n}\n\n\n/**\n *  Returns true if %%value%% is a valid [[HexString]].\n *\n *  If %%length%% is ``true`` or a //number//, it also checks that\n *  %%value%% is a valid [[DataHexString]] of %%length%% (if a //number//)\n *  bytes of data (e.g. ``0x1234`` is 2 bytes).\n */\nexport function isHexString(value: any, length?: number | boolean): value is `0x${ string }` {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n\n    if (typeof(length) === \"number\" && value.length !== 2 + 2 * length) { return false; }\n    if (length === true && (value.length % 2) !== 0) { return false; }\n\n    return true;\n}\n\n/**\n *  Returns true if %%value%% is a valid representation of arbitrary\n *  data (i.e. a valid [[DataHexString]] or a Uint8Array).\n */\nexport function isBytesLike(value: any): value is BytesLike {\n    return (isHexString(value, true) || (value instanceof Uint8Array));\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\n/**\n *  Returns a [[DataHexString]] representation of %%data%%.\n */\nexport function hexlify(data: BytesLike): string {\n    const bytes = getBytes(data);\n\n    let result = \"0x\";\n    for (let i = 0; i < bytes.length; i++) {\n        const v = bytes[i];\n        result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n    return result;\n}\n\n/**\n *  Returns a [[DataHexString]] by concatenating all values\n *  within %%data%%.\n */\nexport function concat(datas: ReadonlyArray<BytesLike>): string {\n    return \"0x\" + datas.map((d) => hexlify(d).substring(2)).join(\"\");\n}\n\n/**\n *  Returns the length of %%data%%, in bytes.\n */\nexport function dataLength(data: BytesLike): number {\n    if (isHexString(data, true)) { return (data.length - 2) / 2; }\n    return getBytes(data).length;\n}\n\n/**\n *  Returns a [[DataHexString]] by slicing %%data%% from the %%start%%\n *  offset to the %%end%% offset.\n *\n *  By default %%start%% is 0 and %%end%% is the length of %%data%%.\n */\nexport function dataSlice(data: BytesLike, start?: number, end?: number): string {\n    const bytes = getBytes(data);\n    if (end != null && end > bytes.length) {\n        assert(false, \"cannot slice beyond data bounds\", \"BUFFER_OVERRUN\", {\n            buffer: bytes, length: bytes.length, offset: end\n        });\n    }\n    return hexlify(bytes.slice((start == null) ? 0: start, (end == null) ? bytes.length: end));\n}\n\n/**\n *  Return the [[DataHexString]] result by stripping all **leading**\n ** zero bytes from %%data%%.\n */\nexport function stripZerosLeft(data: BytesLike): string {\n    let bytes = hexlify(data).substring(2);\n    while (bytes.startsWith(\"00\")) { bytes = bytes.substring(2); }\n    return \"0x\" + bytes;\n}\n\nfunction zeroPad(data: BytesLike, length: number, left: boolean): string {\n    const bytes = getBytes(data);\n    assert(length >= bytes.length, \"padding exceeds data length\", \"BUFFER_OVERRUN\", {\n        buffer: new Uint8Array(bytes),\n        length: length,\n        offset: length + 1\n    });\n\n    const result = new Uint8Array(length);\n    result.fill(0);\n    if (left) {\n        result.set(bytes, length - bytes.length);\n    } else {\n        result.set(bytes, 0);\n    }\n\n    return hexlify(result);\n}\n\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **left**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **values** are in Solidity\n *  (e.g. ``uint128``).\n */\nexport function zeroPadValue(data: BytesLike, length: number): string {\n    return zeroPad(data, length, true);\n}\n\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **right**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **bytes** are in Solidity\n *  (e.g. ``bytes16``).\n */\nexport function zeroPadBytes(data: BytesLike, length: number): string {\n    return zeroPad(data, length, false);\n}\n","/**\n *  Using strings in Ethereum (or any security-basd system) requires\n *  additional care. These utilities attempt to mitigate some of the\n *  safety issues as well as provide the ability to recover and analyse\n *  strings.\n *\n *  @_subsection api/utils:Strings and UTF-8  [about-strings]\n */\nimport { getBytes } from \"./data.js\";\nimport { assertArgument, assertNormalize } from \"./errors.js\";\n\nimport type { BytesLike } from \"./index.js\";\n\n\n///////////////////////////////\n\n/**\n *  The stanard normalization forms.\n */\nexport type UnicodeNormalizationForm = \"NFC\" | \"NFD\" | \"NFKC\" | \"NFKD\";\n\n/**\n *  When using the UTF-8 error API the following errors can be intercepted\n *  and processed as the %%reason%% passed to the [[Utf8ErrorFunc]].\n *\n *  **``\"UNEXPECTED_CONTINUE\"``** - a continuation byte was present where there\n *  was nothing to continue.\n *\n *  **``\"BAD_PREFIX\"``** - an invalid (non-continuation) byte to start a\n *  UTF-8 codepoint was found.\n *\n *  **``\"OVERRUN\"``** - the string is too short to process the expected\n *  codepoint length.\n *\n *  **``\"MISSING_CONTINUE\"``** - a missing continuation byte was expected but\n *  not found. The %%offset%% indicates the index the continuation byte\n *  was expected at.\n *\n *  **``\"OUT_OF_RANGE\"``** - the computed code point is outside the range\n *  for UTF-8. The %%badCodepoint%% indicates the computed codepoint, which was\n *  outside the valid UTF-8 range.\n *\n *  **``\"UTF16_SURROGATE\"``** - the UTF-8 strings contained a UTF-16 surrogate\n *  pair. The %%badCodepoint%% is the computed codepoint, which was inside the\n *  UTF-16 surrogate range.\n *\n *  **``\"OVERLONG\"``** - the string is an overlong representation. The\n *  %%badCodepoint%% indicates the computed codepoint, which has already\n *  been bounds checked.\n *\n *\n *  @returns string\n */\nexport type Utf8ErrorReason = \"UNEXPECTED_CONTINUE\" | \"BAD_PREFIX\" | \"OVERRUN\" |\n    \"MISSING_CONTINUE\" | \"OUT_OF_RANGE\" | \"UTF16_SURROGATE\" | \"OVERLONG\";\n\n\n/**\n *  A callback that can be used with [[toUtf8String]] to analysis or\n *  recovery from invalid UTF-8 data.\n *\n *  Parsing UTF-8 data is done through a simple Finite-State Machine (FSM)\n *  which calls the ``Utf8ErrorFunc`` if a fault is detected.\n *\n *  The %%reason%% indicates where in the FSM execution the fault\n *  occurred and the %%offset%% indicates where the input failed.\n *\n *  The %%bytes%% represents the raw UTF-8 data that was provided and\n *  %%output%% is the current array of UTF-8 code-points, which may\n *  be updated by the ``Utf8ErrorFunc``.\n *\n *  The value of the %%badCodepoint%% depends on the %%reason%%. See\n *  [[Utf8ErrorReason]] for details.\n *\n *  The function should return the number of bytes that should be skipped\n *  when control resumes to the FSM.\n */\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number) => number;\n\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n    assertArgument(false, `invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === \"BAD_PREFIX\" || reason === \"UNEXPECTED_CONTINUE\") {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === \"OVERRUN\") {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === \"OVERLONG\") {\n        assertArgument(typeof(badCodepoint) === \"number\", \"invalid bad code point for replacement\", \"badCodepoint\", badCodepoint);\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n/**\n *  A handful of popular, built-in UTF-8 error handling strategies.\n *\n *  **``\"error\"``** - throws on ANY illegal UTF-8 sequence or\n *  non-canonical (overlong) codepoints (this is the default)\n *\n *  **``\"ignore\"``** - silently drops any illegal UTF-8 sequence\n *  and accepts non-canonical (overlong) codepoints\n *\n *  **``\"replace\"``** - replace any illegal UTF-8 sequence with the\n *  UTF-8 replacement character (i.e. ``\"\\\\ufffd\"``) and accepts\n *  non-canonical (overlong) codepoints\n *\n *  @returns: Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>\n */\nexport const Utf8ErrorFuncs: Readonly<Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>> = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(_bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    const bytes = getBytes(_bytes, \"bytes\");\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength: null | number = null;\n        let overlongMask: null | number = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(\"UNEXPECTED_CONTINUE\", i - 1, bytes, result);\n            } else {\n                i += onError(\"BAD_PREFIX\", i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(\"OVERRUN\", i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res: null | number = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(\"MISSING_CONTINUE\", i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(\"OUT_OF_RANGE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(\"UTF16_SURROGATE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(\"OVERLONG\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n\n/**\n *  Returns the UTF-8 byte representation of %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8Bytes(str: string, form?: UnicodeNormalizationForm): Uint8Array {\n\n    if (form != null) {\n        assertNormalize(form);\n        str = str.normalize(form);\n    }\n\n    let result: Array<number> = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            assertArgument(i < str.length && ((c2 & 0xfc00) === 0xdc00),\n                \"invalid surrogate pair\", \"str\", str);\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return new Uint8Array(result);\n};\n\n//export \nfunction _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\n/**\n *  Returns the string represented by the UTF-8 data %%bytes%%.\n *\n *  When %%onError%% function is specified, it is called on UTF-8\n *  errors allowing recovery using the [[Utf8ErrorFunc]] API.\n *  (default: [error](Utf8ErrorFuncs))\n */\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\n/**\n *  Returns the UTF-8 code-points for %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8CodePoints(str: string, form?: UnicodeNormalizationForm): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n\n","\nexport {\n    createHash, createHmac, pbkdf2Sync, randomBytes\n} from \"crypto\";\n","/**\n *  A **Password-Based Key-Derivation Function** is designed to create\n *  a sequence of bytes suitible as a **key** from a human-rememberable\n *  password.\n *\n *  @_subsection: api/crypto:Passwords  [about-pbkdf]\n */\n\nimport { pbkdf2Sync } from \"./crypto.js\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _pbkdf2 = function(password: Uint8Array, salt: Uint8Array, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\"): BytesLike {\n    return pbkdf2Sync(password, salt, iterations, keylen, algo);\n}\n\nlet __pbkdf2 = _pbkdf2;\n\n/**\n *  Return the [[link-pbkdf2]] for %%keylen%% bytes for %%password%% using\n *  the %%salt%% and using %%iterations%% of %%algo%%.\n *\n *  This PBKDF is outdated and should not be used in new projects, but is\n *  required to decrypt older files.\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the PBKDF2\n *    pbkdf2(passwordBytes, salt, 1024, 16, \"sha256\")\n *    //_result:\n */\nexport function pbkdf2(_password: BytesLike, _salt: BytesLike, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\"): string {\n    const password = getBytes(_password, \"password\");\n    const salt = getBytes(_salt, \"salt\");\n    return hexlify(__pbkdf2(password, salt, iterations, keylen, algo));\n}\npbkdf2._ = _pbkdf2;\npbkdf2.lock = function(): void { locked = true; }\npbkdf2.register = function(func: (password: Uint8Array, salt: Uint8Array, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\") => BytesLike) {\n    if (locked) { throw new Error(\"pbkdf2 is locked\"); }\n    __pbkdf2 = func;\n}\nObject.freeze(pbkdf2);\n","import { createHash } from \"./crypto.js\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nconst _sha256 = function(data: Uint8Array): Uint8Array {\n    return createHash(\"sha256\").update(data).digest();\n}\n\nconst _sha512 = function(data: Uint8Array): Uint8Array {\n    return createHash(\"sha512\").update(data).digest();\n}\n\nlet __sha256: (data: Uint8Array) => BytesLike = _sha256;\nlet __sha512: (data: Uint8Array) => BytesLike = _sha512;\n\nlet locked256 = false, locked512 = false;\n\n\n/**\n *  Compute the cryptographic SHA2-256 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha256(\"0x\")\n *    //_result:\n *\n *    sha256(\"0x1337\")\n *    //_result:\n *\n *    sha256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n */\nexport function sha256(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha256(data));\n}\nsha256._ = _sha256;\nsha256.lock = function(): void { locked256 = true; }\nsha256.register = function(func: (data: Uint8Array) => BytesLike): void {\n    if (locked256) { throw new Error(\"sha256 is locked\"); }\n    __sha256 = func;\n}\nObject.freeze(sha256);\n\n\n/**\n *  Compute the cryptographic SHA2-512 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha512(\"0x\")\n *    //_result:\n *\n *    sha512(\"0x1337\")\n *    //_result:\n *\n *    sha512(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n */\nexport function sha512(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha512(data));\n}\nsha512._ = _sha512;\nsha512.lock = function(): void { locked512 = true; }\nsha512.register = function(func: (data: Uint8Array) => BytesLike): void {\n    if (locked512) { throw new Error(\"sha512 is locked\"); }\n    __sha512 = func;\n}\nObject.freeze(sha256);\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((o, k) => {\n    o[k] = true\n    return o\n  }, {})\nmodule.exports = parseOptions\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const { MAX_LENGTH } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceTilde(c, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceCaret(c, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((c) => {\n    return replaceXRange(c, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false,\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = [new Comparator('>=0.0.0-0')]\n    } else {\n      sub = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","export const capitalizeString = (str: string) => {\n  if (!str.length) {\n    return str;\n  }\n  return str[0].toUpperCase() + str.slice(1);\n};\n","/**\n * Function to take a byte array and split into chunks of a given size\n *\n * @param bytes - The byte array to chunk\n * @param chunkSize - The size of each chunk\n * @returns An array of byte arrays of a specified size\n */\nexport const chunkAndPadBytes = (bytes: Uint8Array, chunkSize: number): Uint8Array[] => {\n  const chunks: Uint8Array[] = [];\n\n  for (let offset = 0; offset < bytes.length; offset += chunkSize) {\n    const chunk = new Uint8Array(chunkSize);\n    chunk.set(bytes.slice(offset, offset + chunkSize));\n    chunks.push(chunk);\n  }\n\n  const lastChunk = chunks[chunks.length - 1];\n  const remainingBytes = bytes.length % chunkSize;\n  const paddedChunkLength = remainingBytes + ((8 - (remainingBytes % 8)) % 8);\n  const newChunk = lastChunk.slice(0, paddedChunkLength);\n  chunks[chunks.length - 1] = newChunk;\n\n  return chunks;\n};\n","import type { BytesLike } from 'ethers';\nimport { getBytesCopy } from 'ethers';\n\n/**\n * Concatenates multiple Uint8Arrays into a single Uint8Array.\n *\n * @param arrays - The arrays to concatenate.\n * @returns - The concatenated array.\n */\nexport const concatBytes = (\n  arrays: ReadonlyArray<Uint8Array> | ReadonlyArray<number[]>\n): Uint8Array => {\n  const byteArrays = arrays.map((array) => {\n    if (array instanceof Uint8Array) {\n      return array;\n    }\n    return Uint8Array.from(array);\n  });\n\n  const totalSize = byteArrays.reduce((accum, item) => accum + item.length, 0);\n  const concatenated = new Uint8Array(totalSize);\n\n  byteArrays.reduce((offset, object) => {\n    concatenated.set(object, offset);\n    return offset + object.length;\n  }, 0);\n\n  return concatenated;\n};\n\n/**\n * Concatenates multiple BytesLike into a single Uint8Array.\n *\n * @param arrays - The arrays to concatenate.\n * @returns - The concatenated array.\n */\nexport const concat = (arrays: ReadonlyArray<BytesLike>): Uint8Array => {\n  const bytes = arrays.map((v) => getBytesCopy(v));\n\n  return concatBytes(bytes);\n};\n","export function getBuiltinVersions() {\n  return {\n    FORC: '0.46.1',\n    FUEL_CORE: '0.20.8',\n    FUELS: '0.69.1',\n  };\n}\n","import semver from 'semver';\n\nimport { getBuiltinVersions } from './getBuiltinVersions';\n\nexport function checkFuelCoreVersionCompatibility(networkVersion: string) {\n  const { FUEL_CORE: supportedVersion } = getBuiltinVersions();\n\n  const networkMajor = semver.major(networkVersion);\n  const networkMinor = semver.minor(networkVersion);\n  const networkPatch = semver.patch(networkVersion);\n\n  const supportedMajor = semver.major(supportedVersion);\n  const supportedMinor = semver.minor(supportedVersion);\n  const supportedPatch = semver.patch(supportedVersion);\n\n  return {\n    supportedVersion,\n    isMajorSupported: networkMajor === supportedMajor,\n    isMinorSupported: networkMinor === supportedMinor,\n    isPatchSupported: networkPatch === supportedPatch,\n  };\n}\n","/*\n  1) Variables\n  ------------\n    `FUELS` — comes from `/packages/fuels/package.json`\n    `FUEL_CORE` — comes from `/packages/fuel-core/VERSION`\n    `FORC` — comes from `/packages/forc/VERSION`\n\n  3) Pre Build\n  ------------\n    There's a `prebuild` script in:\n     - packages/versions/package.json\n\n    Before build, it will call this file:\n      - packages/versions/scripts/replaceVersions.ts\n\n    Which will replace static versions at:\n      - packages/versions/src/lib/getBuiltinVersions.ts\n\n    If no env variables are set, it uses the current versions\n    from the original locations mentioned in the 1st step.\n\n  3)  CI\n  ------------\n    As part of the CI release (1) routine, the changes made\n    to the versions package by the `prebuild` routine will\n    be committed by the same script (2) that handles the\n    docs versioning.\n\n      - (1) <repoRoot>/.github/workflows/release.yaml\n      - (2) <repoRoot>/changeset-version-with-docs.ts\n\n  4) Build\n  ------------\n    By the time we get to the `build` step, everything is in\n    place already and ready to be built and released.\n*/\n\nimport { getBuiltinVersions } from './lib/getBuiltinVersions';\n\nexport const versions = getBuiltinVersions();\n\nexport * from './lib/checkFuelCoreVersionCompatibility';\n","/**\n * Represents the different error codes thrown by the SDK\n */\nexport enum ErrorCode {\n  // abi\n  NO_ABIS_FOUND = 'no-abis-found',\n  ABI_TYPES_AND_VALUES_MISMATCH = 'abi-types-and-values-mismatch',\n  ABI_MAIN_METHOD_MISSING = 'abi-main-method-missing',\n  INVALID_COMPONENT = 'invalid-component',\n  FRAGMENT_NOT_FOUND = 'fragment-not-found',\n  CONFIGURABLE_NOT_FOUND = 'configurable-not-found',\n  TYPE_NOT_FOUND = 'type-not-found',\n  TYPE_NOT_SUPPORTED = 'type-not-supported',\n  INVALID_DECODE_VALUE = 'invalid-decode-value',\n  JSON_ABI_ERROR = 'json-abi-error',\n  TYPE_ID_NOT_FOUND = 'type-id-not-found',\n  BIN_FILE_NOT_FOUND = 'bin-file-not-found',\n  CODER_NOT_FOUND = 'coder-not-found',\n  INVALID_DATA = 'invalid-data',\n  FUNCTION_NOT_FOUND = 'function-not-found',\n\n  // address\n  INVALID_BECH32_ADDRESS = 'invalid-bech32-address',\n  INVALID_EVM_ADDRESS = 'invalid-evm-address',\n  INVALID_B256_ADDRESS = 'invalid-b256-address',\n\n  // provider\n  INVALID_URL = 'invalid-url',\n  CHAIN_INFO_CACHE_EMPTY = 'chain-info-cache-empty',\n  NODE_INFO_CACHE_EMPTY = 'node-info-cache-empty',\n  MISSING_PROVIDER = 'missing-provider',\n\n  // wallet\n  INVALID_PUBLIC_KEY = 'invalid-public-key',\n  INSUFFICIENT_BALANCE = 'insufficient-balance',\n  WALLET_MANAGER_ERROR = 'wallet-manager-error',\n  HD_WALLET_ERROR = 'hd-wallet-error',\n\n  // errors\n  PARSE_FAILED = 'parse-failed',\n  ENCODE_ERROR = 'encode-error',\n  DECODE_ERROR = 'decode-error',\n  INVALID_CREDENTIALS = 'invalid-credentials',\n  ENV_DEPENDENCY_MISSING = 'env-dependency-missing',\n  INVALID_TTL = 'invalid-ttl',\n  INVALID_INPUT_PARAMETERS = 'invalid-input-parameters',\n  NOT_IMPLEMENTED = 'not-implemented',\n  NOT_SUPPORTED = 'not-supported',\n  CONVERTING_FAILED = 'converting-error',\n  ELEMENT_NOT_FOUND = 'element-not-found',\n  MISSING_REQUIRED_PARAMETER = 'missing-required-parameter',\n  UNEXPECTED_HEX_VALUE = 'unexpected-hex-value',\n\n  // transaction\n  GAS_PRICE_TOO_LOW = 'gas-price-too-low',\n  GAS_LIMIT_TOO_LOW = 'gas-limit-too-low',\n  TRANSACTION_NOT_FOUND = 'transaction-not-found',\n  TRANSACTION_FAILED = 'transaction-failed',\n  INVALID_CONFIGURABLE_CONSTANTS = 'invalid-configurable-constants',\n  INVALID_TRANSACTION_INPUT = 'invalid-transaction-input',\n  INVALID_TRANSACTION_OUTPUT = 'invalid-transaction-output',\n  INVALID_TRANSACTION_STATUS = 'invalid-transaction-status',\n  INVALID_TRANSACTION_TYPE = 'invalid-transaction-type',\n  TRANSACTION_ERROR = 'transaction-error',\n\n  // receipt\n  INVALID_RECEIPT_TYPE = 'invalid-receipt-type',\n\n  // mnemonic\n  INVALID_WORD_LIST = 'invalid-word-list',\n  INVALID_MNEMONIC = 'invalid-mnemonic',\n  INVALID_ENTROPY = 'invalid-entropy',\n  INVALID_SEED = 'invalid-seed',\n  INVALID_CHECKSUM = 'invalid-checksum',\n\n  // wallet / account\n  INVALID_PASSWORD = 'invalid-password',\n  ACCOUNT_REQUIRED = 'account-required',\n\n  // chain\n  LATEST_BLOCK_UNAVAILABLE = 'latest-block-unavailable',\n  ERROR_BUILDING_BLOCK_EXPLORER_URL = 'error-building-block-explorer-url',\n  UNSUPPORTED_FUEL_CLIENT_VERSION = 'unsupported-fuel-client-version',\n\n  // docs\n  VITEPRESS_PLUGIN_ERROR = 'vitepress-plugin-error',\n\n  // contract\n  INVALID_MULTICALL = 'invalid-multicall',\n\n  // script\n  SCRIPT_REVERTED = 'script-reverted',\n  SCRIPT_RETURN_INVALID_TYPE = 'script-return-invalid-type',\n\n  // coder\n  // ...\n}\n","import { versions } from '@fuel-ts/versions';\n\nimport { ErrorCode } from './error-codes';\n\nexport class FuelError extends Error {\n  static readonly CODES = ErrorCode;\n  readonly VERSIONS = versions;\n\n  static parse(e: unknown) {\n    const error = e as FuelError;\n\n    if (error.code === undefined) {\n      throw new FuelError(\n        ErrorCode.PARSE_FAILED,\n        \"Failed to parse the error object. The required 'code' property is missing.\"\n      );\n    }\n\n    const enumValues = Object.values(ErrorCode);\n    const codeIsKnown = enumValues.includes(error.code);\n\n    if (!codeIsKnown) {\n      throw new FuelError(\n        ErrorCode.PARSE_FAILED,\n        `Unknown error code: ${error.code}. Accepted codes: ${enumValues.join(', ')}.`\n      );\n    }\n\n    return new FuelError(error.code, error.message);\n  }\n\n  code: ErrorCode;\n\n  constructor(code: ErrorCode, message: string) {\n    super(message);\n    this.code = code;\n    this.name = 'FuelError';\n  }\n\n  toObject() {\n    const { code, name, message, VERSIONS } = this;\n    return { code, name, message, VERSIONS };\n  }\n}\n","import { FuelError, ErrorCode } from '@fuel-ts/errors';\nimport type { BytesLike } from 'ethers';\n\n/**\n * Converts a bytes-like value to a `Uint8Array`.\n *\n * @param value - the value to convert to a Uint8Array\n * @returns the Uint8Array\n */\nexport const arrayify = (value: BytesLike): Uint8Array => {\n  // Return buffers as a new byte array\n  if (value instanceof Uint8Array) {\n    return new Uint8Array(value);\n  }\n\n  if (typeof value === 'string' && value.match(/^0x([0-9a-f][0-9a-f])*$/i)) {\n    const result = new Uint8Array((value.length - 2) / 2);\n    let offset = 2;\n    for (let i = 0; i < result.length; i++) {\n      result[i] = parseInt(value.substring(offset, offset + 2), 16);\n      offset += 2;\n    }\n    return result;\n  }\n\n  throw new FuelError(ErrorCode.PARSE_FAILED, 'invalid BytesLike value');\n};\n","import type { BytesLike } from 'ethers';\nimport { getBytes } from 'ethers';\n\nconst HexCharacters: string = '0123456789abcdef';\n\n/**\n *  Returns a hex representation of the inputted bytes.\n */\nexport function hexlify(data: BytesLike): string {\n  const bytes = getBytes(data);\n\n  let result = '0x';\n  for (let i = 0; i < bytes.length; i++) {\n    const v = bytes[i];\n    result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n  }\n  return result;\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\n/**\n * Converts `some.string-value` into `SomeStringValue`.\n *\n * Examples:\n *  my-simple.test —— MySimpleTest\n *  myFile.ts —— MyFileTs\n *  my-abi.json —— MyAbiJson\n */\nexport const normalizeString = (str: string): string => {\n  const transformations: ((s: string) => string)[] = [\n    (s) => s.replace(/\\s+/g, '-'), // spaces to -\n    (s) => s.replace(/\\./g, '-'), // dots to -\n    (s) => s.replace(/_/g, '-'), // underscore to -\n    (s) => s.replace(/-[a-z]/g, (match) => match.slice(-1).toUpperCase()), // delete '-' and capitalize the letter after them\n    (s) => s.replace(/-/g, ''), // delete any '-' left\n    (s) => s.replace(/^\\d+/, ''), // removes leading digits\n    (s) => s[0].toUpperCase() + s.slice(1), // capitalize first letter\n  ];\n\n  const output = transformations.reduce((s, t) => t(s), str);\n\n  if (output === '') {\n    const errMsg = `The provided string '${str}' results in an empty output after`.concat(\n      ` normalization, therefore, it can't normalize string.`\n    );\n    throw new FuelError(ErrorCode.PARSE_FAILED, errMsg);\n  }\n\n  return output;\n};\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport BnJs from 'bn.js';\n\nimport { DECIMAL_UNITS, DEFAULT_MIN_PRECISION, DEFAULT_PRECISION } from './configs';\nimport { toFixed } from './decimal';\nimport type { FormatConfig } from './types';\n\ntype CompareResult = -1 | 0 | 1;\nexport type BNInput = number | string | number[] | Uint8Array | Buffer | BnJs;\ninterface BNHelper {\n  caller(v: BNInput, methodName: string): BN | boolean | CompareResult;\n  toHex: (bytesPadding?: number) => string;\n  toBytes: (bytesPadding?: number) => Uint8Array;\n  toJSON: () => string;\n}\ninterface BNInputOverrides {\n  add: (v: BNInput) => BN;\n  pow: (v: BNInput) => BN;\n  sub: (v: BNInput) => BN;\n  div: (v: BNInput) => BN;\n  mul: (v: BNInput) => BN;\n  mod: (v: BNInput) => BN;\n  divRound: (v: BNInput) => BN;\n  lt: (v: BNInput) => boolean;\n  lte: (v: BNInput) => boolean;\n  gt: (v: BNInput) => boolean;\n  gte: (v: BNInput) => boolean;\n  eq: (v: BNInput) => boolean;\n  cmp: (v: BNInput) => CompareResult;\n}\ninterface BNOverrides {\n  sqr: () => BN;\n  neg: () => BN;\n  abs: () => BN;\n  toTwos: (width: number) => BN;\n  fromTwos: (width: number) => BN;\n}\ninterface BNHiddenTypes {\n  mulTo: (num: BN, out: BN) => BN;\n  divmod: (num: BNInput, mode?: string, positive?: boolean) => { mod: BN; div: BN };\n}\ntype BNInputOverridesKeys = keyof BNInputOverrides;\n\nexport class BN extends BnJs implements BNInputOverrides, BNHiddenTypes, BNHelper, BNOverrides {\n  constructor(value?: BNInput | null, base?: number | 'hex', endian?: BnJs.Endianness) {\n    if (BN.isBN(value)) {\n      super(value.toArray(), base, endian);\n      return;\n    }\n    // trim '0x' from hex strings as BN doesn't support it - https://github.com/ChainSafe/web3.js/issues/3847\n    if (typeof value === 'string' && value.slice(0, 2) === '0x') {\n      super(value.substring(2), base || 'hex', endian);\n      return;\n    }\n    const defaultValue = value == null ? 0 : value;\n    super(defaultValue, base, endian);\n  }\n\n  // ANCHOR: HELPERS\n  // make sure we always include `0x` in hex strings\n  toString(base?: number | 'hex', length?: number) {\n    const output = super.toString(base, length);\n\n    if (base === 16 || base === 'hex') {\n      return `0x${output}`;\n    }\n\n    return output;\n  }\n\n  toHex(bytesPadding?: number): string {\n    const bytes = bytesPadding || 0;\n    const bytesLength = bytes * 2;\n\n    if (this.isNeg()) {\n      throw new FuelError(ErrorCode.CONVERTING_FAILED, 'Cannot convert negative value to hex.');\n    }\n    if (bytesPadding && this.byteLength() > bytesPadding) {\n      throw new FuelError(\n        ErrorCode.CONVERTING_FAILED,\n        `Provided value ${this} is too large. It should fit within ${bytesPadding} bytes.`\n      );\n    }\n\n    return this.toString(16, bytesLength);\n  }\n\n  toBytes(bytesPadding?: number): Uint8Array {\n    if (this.isNeg()) {\n      throw new FuelError(ErrorCode.CONVERTING_FAILED, 'Cannot convert negative value to bytes.');\n    }\n\n    return Uint8Array.from(this.toArray(undefined, bytesPadding));\n  }\n\n  toJSON(): string {\n    return this.toString(16);\n  }\n\n  valueOf(): string {\n    return this.toString();\n  }\n\n  format(options?: FormatConfig): string {\n    const {\n      units = DECIMAL_UNITS,\n      precision = DEFAULT_PRECISION,\n      minPrecision = DEFAULT_MIN_PRECISION,\n    } = options || {};\n\n    const formattedUnits = this.formatUnits(units);\n    const formattedFixed = toFixed(formattedUnits, { precision, minPrecision });\n\n    // increase precision if formatted is zero, but has more numbers out of precision\n    if (!parseFloat(formattedFixed)) {\n      const [, originalDecimals = '0'] = formattedUnits.split('.');\n      const firstNonZero = originalDecimals.match(/[1-9]/);\n\n      if (firstNonZero && firstNonZero.index && firstNonZero.index + 1 > precision) {\n        const [valueUnits = '0'] = formattedFixed.split('.');\n        return `${valueUnits}.${originalDecimals.slice(0, firstNonZero.index + 1)}`;\n      }\n    }\n\n    return formattedFixed;\n  }\n\n  formatUnits(units: number = DECIMAL_UNITS): string {\n    const valueUnits = this.toString().slice(0, units * -1);\n    const valueDecimals = this.toString().slice(units * -1);\n    const length = valueDecimals.length;\n    const defaultDecimals = Array.from({ length: units - length })\n      .fill('0')\n      .join('');\n    const integerPortion = valueUnits ? `${valueUnits}.` : '0.';\n\n    return `${integerPortion}${defaultDecimals}${valueDecimals}`;\n  }\n  // END ANCHOR: HELPERS\n\n  // ANCHOR: OVERRIDES to accept better inputs\n  add(v: BNInput): BN {\n    return this.caller(v, 'add') as BN;\n  }\n\n  pow(v: BNInput): BN {\n    return this.caller(v, 'pow') as BN;\n  }\n\n  sub(v: BNInput): BN {\n    return this.caller(v, 'sub') as BN;\n  }\n\n  div(v: BNInput): BN {\n    return this.caller(v, 'div') as BN;\n  }\n\n  mul(v: BNInput): BN {\n    return this.caller(v, 'mul') as BN;\n  }\n\n  mod(v: BNInput): BN {\n    return this.caller(v, 'mod') as BN;\n  }\n\n  divRound(v: BNInput): BN {\n    return this.caller(v, 'divRound') as BN;\n  }\n\n  lt(v: BNInput): boolean {\n    return this.caller(v, 'lt') as boolean;\n  }\n\n  lte(v: BNInput): boolean {\n    return this.caller(v, 'lte') as boolean;\n  }\n\n  gt(v: BNInput): boolean {\n    return this.caller(v, 'gt') as boolean;\n  }\n\n  gte(v: BNInput): boolean {\n    return this.caller(v, 'gte') as boolean;\n  }\n\n  eq(v: BNInput): boolean {\n    return this.caller(v, 'eq') as boolean;\n  }\n\n  cmp(v: BNInput): CompareResult {\n    return this.caller(v, 'cmp') as CompareResult;\n  }\n  // END ANCHOR: OVERRIDES to accept better inputs\n\n  // ANCHOR: OVERRIDES to output our BN type\n  sqr(): BN {\n    return new BN(super.sqr().toArray());\n  }\n\n  neg(): BN {\n    return new BN(super.neg().toArray());\n  }\n\n  abs(): BN {\n    return new BN(super.abs().toArray());\n  }\n\n  toTwos(width: number): BN {\n    return new BN(super.toTwos(width).toArray());\n  }\n\n  fromTwos(width: number): BN {\n    return new BN(super.fromTwos(width).toArray());\n  }\n  // END ANCHOR: OVERRIDES to output our BN type\n\n  // ANCHOR: OVERRIDES to avoid losing references\n  caller(v: BNInput, methodName: BNInputOverridesKeys): BN | boolean | CompareResult {\n    const output = super[methodName](new BN(v));\n\n    if (BN.isBN(output)) {\n      return new BN(output.toArray());\n    }\n\n    if (typeof output === 'boolean') {\n      return output as boolean;\n    }\n\n    return output as CompareResult;\n  }\n\n  clone() {\n    return new BN(this.toArray());\n  }\n\n  mulTo(num: BN, out: BN) {\n    const output: BnJs = (new BnJs(this.toArray()) as BN).mulTo(num, out);\n\n    return new BN(output.toArray());\n  }\n\n  egcd(p: BnJs) {\n    const { a, b, gcd } = new BnJs(this.toArray()).egcd(p);\n\n    return {\n      a: new BN(a.toArray()),\n      b: new BN(b.toArray()),\n      gcd: new BN(gcd.toArray()),\n    };\n  }\n\n  divmod(num: BNInput, mode?: string, positive?: boolean): { mod: BN; div: BN } {\n    const { div, mod } = (new BnJs(this.toArray()) as BN).divmod(new BN(num), mode, positive);\n\n    return {\n      div: new BN(div?.toArray()),\n      mod: new BN(mod?.toArray()),\n    };\n  }\n  // END ANCHOR: OVERRIDES to avoid losing references\n}\n\n// functional shortcut to create BN\nexport const bn = (value?: BNInput | null, base?: number | 'hex', endian?: BnJs.Endianness) =>\n  new BN(value, base, endian);\n\nbn.parseUnits = (value: string, units: number = DECIMAL_UNITS): BN => {\n  const valueToParse = value === '.' ? '0.' : value;\n  const [valueUnits = '0', valueDecimals = '0'] = valueToParse.split('.');\n  const length = valueDecimals.length;\n\n  if (length > units) {\n    throw new FuelError(\n      ErrorCode.CONVERTING_FAILED,\n      `Decimal can't have more than ${units} digits.`\n    );\n  }\n\n  const decimals = Array.from({ length: units }).fill('0');\n  decimals.splice(0, length, valueDecimals);\n  const amount = `${valueUnits.replaceAll(',', '')}${decimals.join('')}`;\n  return bn(amount);\n};\n","export const DEFAULT_PRECISION = 9;\nexport const DEFAULT_MIN_PRECISION = 3;\nexport const DECIMAL_UNITS = 9;\n","import { DEFAULT_PRECISION, DEFAULT_MIN_PRECISION } from './configs';\nimport type { ToFixedConfig } from './types';\n\nexport function toFixed(value?: string | number, options?: ToFixedConfig) {\n  const { precision = DEFAULT_PRECISION, minPrecision = DEFAULT_MIN_PRECISION } = options || {};\n\n  const [valueUnits = '0', valueDecimals = '0'] = String(value || '0.0').split('.');\n  const groupRegex = /(\\d)(?=(\\d{3})+\\b)/g;\n  const units = valueUnits.replace(groupRegex, '$1,');\n  let decimals = valueDecimals.slice(0, precision);\n\n  // strip traling zeros limited by minPrecision\n  if (minPrecision < precision) {\n    const trimmedDecimal = decimals.match(/.*[1-9]{1}/);\n    const lastNonZeroIndex = trimmedDecimal?.[0].length || 0;\n    const keepChars = Math.max(minPrecision, lastNonZeroIndex);\n    decimals = decimals.slice(0, keepChars);\n  }\n\n  const decimalPortion = decimals ? `.${decimals}` : '';\n  return `${units}${decimalPortion}`;\n}\n","import type { BNInput } from './bn';\nimport { bn } from './bn';\nimport type { FormatConfig } from './types';\n\n/**\n * Functional shortcuts\n */\n\n// Shortcut to bn(value).toNumber\nexport function toNumber(value: BNInput): number {\n  return bn(value).toNumber();\n}\n\n// Shortcut to bn(value).toHex\nexport function toHex(value: BNInput, bytesPadding?: number): string {\n  return bn(value).toHex(bytesPadding);\n}\n\n// Shortcut to bn(value).toBytes\nexport function toBytes(value: BNInput, bytesPadding?: number): Uint8Array {\n  return bn(value).toBytes(bytesPadding);\n}\n\n// Shortcut to bn.(value).formatUnits\nexport function formatUnits(value: BNInput, units?: number): string {\n  return bn(value).formatUnits(units);\n}\n\n// Shortcut to bn.(value).format\nexport function format(value: BNInput, options?: FormatConfig): string {\n  return bn(value).format(options);\n}\n","import type { BN } from './bn';\nimport { bn } from './bn';\nimport type { BigNumberish } from './types';\n\nexport function max(...numbers: Array<BigNumberish>): BN {\n  return numbers.reduce<BN>((prev, cur) => (bn(cur).gt(prev) ? bn(cur) : prev), bn(0));\n}\n\nexport function multiply(...numbers: Array<BigNumberish>): BN {\n  return bn(Math.ceil(numbers.reduce<BN>((a, b) => bn(a).mul(b), bn(1)).toNumber()));\n}\n","import { ErrorCode } from '@fuel-ts/errors';\nimport type { BN, BNInput } from '@fuel-ts/math';\nimport { bn, toBytes } from '@fuel-ts/math';\n\nimport { Coder } from './abstract-coder';\n\nexport class U64Coder extends Coder<BNInput, BN> {\n  constructor() {\n    super('u64', 'u64', 8);\n  }\n\n  encode(value: BNInput): Uint8Array {\n    let bytes;\n\n    try {\n      bytes = toBytes(value, 8);\n    } catch (error) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Invalid ${this.type}.`);\n    }\n\n    return bytes;\n  }\n\n  decode(data: Uint8Array, offset: number): [BN, number] {\n    let bytes = data.slice(offset, offset + 8);\n    bytes = bytes.slice(0, 8);\n\n    return [bn(bytes), offset + 8];\n  }\n}\n","export const OPTION_CODER_TYPE = 'enum Option';\nexport const VEC_CODER_TYPE = 'struct Vec';\nexport const BYTES_CODER_TYPE = 'struct Bytes';\nexport const STD_STRING_CODER_TYPE = 'struct String';\nexport const stringRegEx = /str\\[(?<length>[0-9]+)\\]/;\nexport const arrayRegEx = /\\[(?<item>[\\w\\s\\\\[\\]]+);\\s*(?<length>[0-9]+)\\]/;\nexport const structRegEx = /^struct (?<name>\\w+)$/;\nexport const enumRegEx = /^enum (?<name>\\w+)$/;\nexport const tupleRegEx = /^\\((?<items>.*)\\)$/;\nexport const genericRegEx = /^generic (?<name>\\w+)$/;\n\nexport const WORD_SIZE = 8;\nexport const BYTES_32 = 32;\nexport const MAX_INPUTS = 255;\n\nexport const ASSET_ID_LEN = BYTES_32;\nexport const CONTRACT_ID_LEN = BYTES_32;\nexport const ADDRESS_LEN = BYTES_32;\nexport const NONCE_LEN = BYTES_32;\nexport const UTXO_LEN = WORD_SIZE * 5;\nexport const TX_POINTER_LEN = WORD_SIZE * 2;\n\nexport const calculateVmTxMemory = ({ maxInputs }: { maxInputs: number }) =>\n  BYTES_32 + // Tx ID\n  WORD_SIZE + // Tx size\n  // Asset ID/Balance coin input pairs\n  maxInputs * (ASSET_ID_LEN + WORD_SIZE);\n\n// SCRIPT_FIXED_SIZE = 104\nexport const SCRIPT_FIXED_SIZE =\n  WORD_SIZE + // Identifier\n  WORD_SIZE + // Gas price\n  WORD_SIZE + // Gas limit\n  WORD_SIZE + // Maturity\n  WORD_SIZE + // Script size\n  WORD_SIZE + // Script data size\n  WORD_SIZE + // Inputs size\n  WORD_SIZE + // Outputs size\n  WORD_SIZE + // Witnesses size\n  BYTES_32; // Receipts root\n\n// INPUT_COIN_FIXED_SIZE = 176\nexport const INPUT_COIN_FIXED_SIZE =\n  WORD_SIZE + // Identifier\n  UTXO_LEN + // Utxo Length\n  ADDRESS_LEN + // Owner\n  WORD_SIZE + // Amount\n  ASSET_ID_LEN + // Asset id\n  TX_POINTER_LEN + // TxPointer\n  WORD_SIZE + // Witnesses index\n  WORD_SIZE + // Maturity\n  WORD_SIZE + // Predicate size\n  WORD_SIZE + // Predicate data size\n  WORD_SIZE; // Predicate gas used\n\n// INPUT_MESSAGE_FIXED_SIZE = 168\nexport const INPUT_MESSAGE_FIXED_SIZE =\n  WORD_SIZE + // Identifier\n  ADDRESS_LEN + // Sender\n  ADDRESS_LEN + // Recipient\n  WORD_SIZE + // Amount\n  NONCE_LEN + // Nonce\n  WORD_SIZE + // witness_index\n  WORD_SIZE + // Data size\n  WORD_SIZE + // Predicate size\n  WORD_SIZE + // Predicate data size\n  WORD_SIZE; // Predicate gas used\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { concat } from '@fuel-ts/utils';\nimport { getBytesCopy, type BytesLike } from 'ethers';\n\nimport { U64Coder } from './coders/u64';\nimport { BYTES_CODER_TYPE, VEC_CODER_TYPE, STD_STRING_CODER_TYPE, WORD_SIZE } from './constants';\n\nexport type DynamicData = {\n  [pointerIndex: number]: Uint8ArrayWithDynamicData;\n};\n\nexport type Uint8ArrayWithDynamicData = Uint8Array & {\n  dynamicData?: DynamicData;\n};\n\nconst VEC_PROPERTY_SPACE = 3; // ptr + cap + length\nexport const BASE_VECTOR_OFFSET = VEC_PROPERTY_SPACE * WORD_SIZE;\n\nconst RAW_SLICE_PROPERTY_SPACE = 2; // ptr + length\nexport const BASE_RAW_SLICE_OFFSET = RAW_SLICE_PROPERTY_SPACE * WORD_SIZE;\n\n// this is a fork of @ethersproject/bytes:concat\n// this collects individual dynamicData data and relocates it to top level\nexport function concatWithDynamicData(items: ReadonlyArray<BytesLike>): Uint8ArrayWithDynamicData {\n  const topLevelData: DynamicData = {};\n\n  let totalIndex = 0;\n  const objects = items.map((item) => {\n    const dynamicData = (item as Uint8ArrayWithDynamicData).dynamicData;\n    if (dynamicData) {\n      Object.entries(dynamicData).forEach(([pointerIndex, vData]) => {\n        topLevelData[parseInt(pointerIndex, 10) + totalIndex] = vData;\n      });\n    }\n\n    const byteArray = getBytesCopy(item);\n    totalIndex += byteArray.byteLength / WORD_SIZE;\n\n    return byteArray;\n  });\n\n  const length = objects.reduce((accum, item) => accum + item.length, 0);\n  const result: Uint8ArrayWithDynamicData = new Uint8Array(length);\n\n  objects.reduce((offset, object) => {\n    result.set(object, offset);\n    return offset + object.length;\n  }, 0);\n\n  // store vector data and pointer indices, but only if data exist\n  if (Object.keys(topLevelData).length) {\n    result.dynamicData = topLevelData;\n  }\n\n  return result;\n}\n\nexport function unpackDynamicData(\n  results: Uint8ArrayWithDynamicData,\n  baseOffset: number,\n  dataOffset: number\n): Uint8Array {\n  if (!results.dynamicData) {\n    return concat([results]);\n  }\n\n  let cumulativeDynamicByteLength = 0;\n  let updatedResults = results;\n  Object.entries(results.dynamicData).forEach(([pointerIndex, vData]) => {\n    // update value of pointer\n    const pointerOffset = parseInt(pointerIndex, 10) * WORD_SIZE;\n    const adjustedValue = new U64Coder().encode(\n      dataOffset + baseOffset + cumulativeDynamicByteLength\n    );\n    updatedResults.set(adjustedValue, pointerOffset);\n\n    // append dynamic data at the end\n    const dataToAppend = vData.dynamicData\n      ? // unpack child dynamic data\n        unpackDynamicData(\n          vData,\n          baseOffset,\n          dataOffset + vData.byteLength + cumulativeDynamicByteLength\n        )\n      : vData;\n    updatedResults = concat([updatedResults, dataToAppend]);\n\n    cumulativeDynamicByteLength += dataToAppend.byteLength;\n  });\n\n  return updatedResults;\n}\n\n/**\n * Turns:\n  Uint8Array(24) [\n    0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 24\n  ]\n\n  Into:\n  Array [\n    Uint8Array(8) [\n      0, 0, 0, 0, 0, 0, 0, 1\n    ],\n    Uint8Array(8) [\n      0, 0, 0, 0, 0, 0, 0, 2\n    ],\n    Uint8Array(8) [\n      0, 0, 0, 0, 0, 0, 0, 24\n    ]\n  ]\n *\n */\nexport const chunkByLength = (data: Uint8Array, length = WORD_SIZE): Uint8Array[] => {\n  const chunks = [];\n  let offset = 0;\n  let chunk = data.slice(offset, offset + length);\n  while (chunk.length) {\n    chunks.push(chunk);\n    offset += length;\n    chunk = data.slice(offset, offset + length);\n  }\n\n  return chunks;\n};\n\n/**\n * Checks if a given type is a pointer type\n * See: https://github.com/FuelLabs/sway/issues/1368\n */\nexport const isPointerType = (type: string) => {\n  switch (type) {\n    case 'u8':\n    case 'u16':\n    case 'u32':\n    case 'u64':\n    case 'bool': {\n      return false;\n    }\n    default: {\n      return true;\n    }\n  }\n};\n\nexport const isHeapType = (type: string) =>\n  type === VEC_CODER_TYPE || type === BYTES_CODER_TYPE || type === STD_STRING_CODER_TYPE;\n\nexport function findOrThrow<T>(\n  arr: readonly T[],\n  predicate: (val: T) => boolean,\n  throwFn: () => never = () => {\n    throw new FuelError(ErrorCode.ELEMENT_NOT_FOUND, 'Element not found in the array.');\n  }\n): T {\n  const found = arr.find(predicate);\n  if (found === undefined) {\n    throwFn();\n  }\n\n  return found;\n}\n","import { ErrorCode } from '@fuel-ts/errors';\n\nimport { concatWithDynamicData } from '../utilities';\n\nimport type { TypesOfCoder } from './abstract-coder';\nimport { Coder } from './abstract-coder';\n\ntype InputValueOf<TCoder extends Coder> = Array<TypesOfCoder<TCoder>['Input']>;\ntype DecodedValueOf<TCoder extends Coder> = Array<TypesOfCoder<TCoder>['Decoded']>;\n\nexport class ArrayCoder<TCoder extends Coder> extends Coder<\n  InputValueOf<TCoder>,\n  DecodedValueOf<TCoder>\n> {\n  coder: TCoder;\n  length: number;\n\n  constructor(coder: TCoder, length: number) {\n    super('array', `[${coder.type}; ${length}]`, length * coder.encodedLength);\n    this.coder = coder;\n    this.length = length;\n  }\n\n  encode(value: InputValueOf<TCoder>): Uint8Array {\n    if (!Array.isArray(value)) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Expected array value.`);\n    }\n\n    if (this.length !== value.length) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Types/values length mismatch.`);\n    }\n\n    return concatWithDynamicData(Array.from(value).map((v) => this.coder.encode(v)));\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoder>, number] {\n    let newOffset = offset;\n    const decodedValue = Array(this.length)\n      .fill(0)\n      .map(() => {\n        let decoded;\n        [decoded, newOffset] = this.coder.decode(data, newOffset);\n        return decoded;\n      });\n\n    return [decodedValue as DecodedValueOf<TCoder>, newOffset];\n  }\n}\n","import { ErrorCode } from '@fuel-ts/errors';\nimport { bn, toHex } from '@fuel-ts/math';\nimport { getBytesCopy } from 'ethers';\n\nimport { Coder } from './abstract-coder';\n\nexport class B256Coder extends Coder<string, string> {\n  constructor() {\n    super('b256', 'b256', 32);\n  }\n\n  encode(value: string): Uint8Array {\n    let encodedValue;\n    try {\n      encodedValue = getBytesCopy(value);\n    } catch (error) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Invalid ${this.type}.`);\n    }\n    if (encodedValue.length !== 32) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Invalid ${this.type}.`);\n    }\n    return encodedValue;\n  }\n\n  decode(data: Uint8Array, offset: number): [string, number] {\n    let bytes = data.slice(offset, offset + 32);\n    const decoded = bn(bytes);\n    if (decoded.isZero()) {\n      bytes = new Uint8Array(32);\n    }\n    if (bytes.length !== 32) {\n      this.throwError(ErrorCode.DECODE_ERROR, `'Invalid size for b256'.`);\n    }\n    return [toHex(bytes, 32), offset + 32];\n  }\n}\n","import { ErrorCode } from '@fuel-ts/errors';\nimport { bn, toHex } from '@fuel-ts/math';\nimport { getBytesCopy } from 'ethers';\n\nimport { Coder } from './abstract-coder';\n\nexport class B512Coder extends Coder<string, string> {\n  constructor() {\n    super('b512', 'struct B512', 64);\n  }\n\n  encode(value: string): Uint8Array {\n    let encodedValue;\n    try {\n      encodedValue = getBytesCopy(value);\n    } catch (error) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Invalid ${this.type}.`);\n    }\n    if (encodedValue.length !== 64) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Invalid ${this.type}.`);\n    }\n    return encodedValue;\n  }\n\n  decode(data: Uint8Array, offset: number): [string, number] {\n    let bytes = data.slice(offset, offset + 64);\n    const decoded = bn(bytes);\n    if (decoded.isZero()) {\n      bytes = new Uint8Array(64);\n    }\n    if (bytes.length !== 64) {\n      this.throwError(ErrorCode.DECODE_ERROR, `Invalid size for b512.`);\n    }\n    return [toHex(bytes, 64), offset + 64];\n  }\n}\n","import { ErrorCode } from '@fuel-ts/errors';\nimport { bn, toBytes } from '@fuel-ts/math';\n\nimport { Coder } from './abstract-coder';\n\nexport class BooleanCoder extends Coder<boolean, boolean> {\n  constructor() {\n    super('boolean', 'boolean', 8);\n  }\n\n  encode(value: boolean): Uint8Array {\n    const isTrueBool = value === true || value === false;\n    if (!isTrueBool) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Invalid boolean value.`);\n    }\n\n    return toBytes(value ? 1 : 0, 8);\n  }\n\n  decode(data: Uint8Array, offset: number): [boolean, number] {\n    const bytes = bn(data.slice(offset, offset + 8));\n    if (bytes.isZero()) {\n      return [false, offset + 8];\n    }\n    if (!bytes.eq(bn(1))) {\n      this.throwError(ErrorCode.DECODE_ERROR, `Invalid boolean value.`);\n    }\n    return [true, offset + 8];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { toNumber } from '@fuel-ts/math';\nimport { concat } from '@fuel-ts/utils';\nimport type { RequireExactlyOne } from 'type-fest';\n\nimport { concatWithDynamicData } from '../utilities';\n\nimport type { TypesOfCoder } from './abstract-coder';\nimport { Coder } from './abstract-coder';\nimport { U64Coder } from './u64';\n\nexport type InputValueOf<TCoders extends Record<string, Coder>> = RequireExactlyOne<{\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Input'];\n}>;\nexport type DecodedValueOf<TCoders extends Record<string, Coder>> = RequireExactlyOne<{\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Decoded'];\n}>;\n\nconst isFullyNativeEnum = (enumCoders: { [s: string]: unknown } | ArrayLike<unknown>): boolean =>\n  Object.values(enumCoders).every(\n    // @ts-expect-error complicated types\n    ({ type, coders }) => type === '()' && JSON.stringify(coders) === JSON.stringify([])\n  );\n\nexport class EnumCoder<TCoders extends Record<string, Coder>> extends Coder<\n  InputValueOf<TCoders>,\n  DecodedValueOf<TCoders>\n> {\n  name: string;\n  coders: TCoders;\n  #caseIndexCoder: U64Coder;\n  #encodedValueSize: number;\n\n  constructor(name: string, coders: TCoders) {\n    const caseIndexCoder = new U64Coder();\n    const encodedValueSize = Object.values(coders).reduce(\n      (max, coder) => Math.max(max, coder.encodedLength),\n      0\n    );\n    super('enum', `enum ${name}`, caseIndexCoder.encodedLength + encodedValueSize);\n    this.name = name;\n    this.coders = coders;\n    this.#caseIndexCoder = caseIndexCoder;\n    this.#encodedValueSize = encodedValueSize;\n  }\n\n  #encodeNativeEnum(value: string): Uint8Array {\n    const valueCoder = this.coders[value];\n    const encodedValue = valueCoder.encode([]);\n    const caseIndex = Object.keys(this.coders).indexOf(value);\n\n    const padding = new Uint8Array(this.#encodedValueSize - valueCoder.encodedLength);\n    return concat([this.#caseIndexCoder.encode(caseIndex), padding, encodedValue]);\n  }\n\n  encode(value: InputValueOf<TCoders>): Uint8Array {\n    if (typeof value === 'string' && this.coders[value]) {\n      return this.#encodeNativeEnum(value);\n    }\n\n    const [caseKey, ...empty] = Object.keys(value);\n    if (!caseKey) {\n      throw new FuelError(ErrorCode.INVALID_DECODE_VALUE, 'A field for the case must be provided.');\n    }\n    if (empty.length !== 0) {\n      throw new FuelError(ErrorCode.INVALID_DECODE_VALUE, 'Only one field must be provided.');\n    }\n    const valueCoder = this.coders[caseKey];\n    const caseIndex = Object.keys(this.coders).indexOf(caseKey);\n    const encodedValue = valueCoder.encode(value[caseKey]);\n\n    const padding = new Uint8Array(this.#encodedValueSize - valueCoder.encodedLength);\n    return concatWithDynamicData([this.#caseIndexCoder.encode(caseIndex), padding, encodedValue]);\n  }\n\n  #decodeNativeEnum(caseKey: string, newOffset: number): [DecodedValueOf<TCoders>, number] {\n    return [caseKey as unknown as DecodedValueOf<TCoders>, newOffset];\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoders>, number] {\n    let newOffset = offset;\n\n    let decoded;\n    [decoded, newOffset] = new U64Coder().decode(data, newOffset);\n    const caseIndex = toNumber(decoded);\n    const caseKey = Object.keys(this.coders)[caseIndex];\n    if (!caseKey) {\n      throw new FuelError(\n        ErrorCode.INVALID_DECODE_VALUE,\n        `Invalid caseIndex \"${caseIndex}\". Valid cases: ${Object.keys(this.coders)}.`\n      );\n    }\n\n    const valueCoder = this.coders[caseKey];\n    const padding = this.#encodedValueSize - valueCoder.encodedLength;\n    newOffset += padding;\n    [decoded, newOffset] = valueCoder.decode(data, newOffset);\n\n    if (isFullyNativeEnum(this.coders)) {\n      return this.#decodeNativeEnum(caseKey, newOffset);\n    }\n\n    return [{ [caseKey]: decoded } as DecodedValueOf<TCoders>, newOffset];\n  }\n}\n","import { ErrorCode } from '@fuel-ts/errors';\nimport { toNumber, toBytes } from '@fuel-ts/math';\n\nimport { Coder } from './abstract-coder';\n\ntype NumberCoderType = 'u8' | 'u16' | 'u32';\n\nexport class NumberCoder extends Coder<number, number> {\n  // This is to align the bits to the total bytes\n  // See https://github.com/FuelLabs/fuel-specs/blob/master/specs/protocol/abi.md#unsigned-integers\n  length: number;\n  baseType: NumberCoderType;\n\n  constructor(baseType: NumberCoderType) {\n    super('number', baseType, 8);\n    this.baseType = baseType;\n    switch (baseType) {\n      case 'u8':\n        this.length = 1;\n        break;\n      case 'u16':\n        this.length = 2;\n        break;\n      case 'u32':\n      default:\n        this.length = 4;\n        break;\n    }\n  }\n\n  encode(value: number | string): Uint8Array {\n    let bytes;\n\n    try {\n      bytes = toBytes(value);\n    } catch (error) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Invalid ${this.baseType}.`);\n    }\n\n    if (bytes.length > this.length) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Invalid ${this.baseType}, too many bytes.`);\n    }\n\n    return toBytes(bytes, 8);\n  }\n\n  decode(data: Uint8Array, offset: number): [number, number] {\n    let bytes = data.slice(offset, offset + 8);\n    bytes = bytes.slice(8 - this.length, 8);\n\n    return [toNumber(bytes), offset + 8];\n  }\n}\n","import { ErrorCode } from '@fuel-ts/errors';\nimport { concat } from '@fuel-ts/utils';\nimport { toUtf8Bytes, toUtf8String } from 'ethers';\n\nimport { Coder } from './abstract-coder';\n\nexport class StringCoder<TLength extends number = number> extends Coder<string, string> {\n  length: TLength;\n  #paddingLength: number;\n\n  constructor(length: TLength) {\n    let paddingLength = (8 - length) % 8;\n    paddingLength = paddingLength < 0 ? paddingLength + 8 : paddingLength;\n    super('string', `str[${length}]`, length + paddingLength);\n    this.length = length;\n    this.#paddingLength = paddingLength;\n  }\n\n  encode(value: string): Uint8Array {\n    if (this.length !== value.length) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Value length mismatch during encode.`);\n    }\n\n    const encoded = toUtf8Bytes(value);\n    const padding = new Uint8Array(this.#paddingLength);\n    return concat([encoded, padding]);\n  }\n\n  decode(data: Uint8Array, offset: number): [string, number] {\n    const bytes = data.slice(offset, offset + this.length);\n    const value = toUtf8String(bytes);\n\n    const padding = this.#paddingLength;\n    return [value, offset + this.length + padding];\n  }\n}\n","import type { Coder } from './abstract-coder';\nimport type { InputValueOf, DecodedValueOf } from './enum';\nimport { EnumCoder } from './enum';\n\ntype SwayOption<T> = { None: [] } | { Some: T };\nexport type Option<T> = T | undefined;\n\nexport class OptionCoder<TCoders extends Record<string, Coder>> extends EnumCoder<TCoders> {\n  encode(value: InputValueOf<TCoders>): Uint8Array {\n    const result = super.encode(this.toSwayOption(value) as unknown as InputValueOf<TCoders>);\n    return result;\n  }\n\n  toSwayOption(input: InputValueOf<TCoders>): SwayOption<unknown> {\n    if (input !== undefined) {\n      return { Some: input };\n    }\n\n    return { None: [] };\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoders>, number] {\n    const [decoded, newOffset] = super.decode(data, offset);\n    return [this.toOption(decoded) as DecodedValueOf<TCoders>, newOffset];\n  }\n\n  toOption(output?: DecodedValueOf<TCoders>): Option<unknown> {\n    if (output && 'Some' in output) {\n      return output.Some;\n    }\n\n    return undefined;\n  }\n}\n","import { ErrorCode } from '@fuel-ts/errors';\n\nimport { concatWithDynamicData } from '../utilities';\n\nimport type { TypesOfCoder } from './abstract-coder';\nimport { Coder } from './abstract-coder';\nimport { OptionCoder } from './option';\n\ntype InputValueOf<TCoders extends Record<string, Coder>> = {\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Input'];\n};\ntype DecodedValueOf<TCoders extends Record<string, Coder>> = {\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Decoded'];\n};\n\nexport class StructCoder<TCoders extends Record<string, Coder>> extends Coder<\n  InputValueOf<TCoders>,\n  DecodedValueOf<TCoders>\n> {\n  name: string;\n  coders: TCoders;\n\n  constructor(name: string, coders: TCoders) {\n    const encodedLength = Object.values(coders).reduce(\n      (acc, coder) => acc + coder.encodedLength,\n      0\n    );\n    super('struct', `struct ${name}`, encodedLength);\n    this.name = name;\n    this.coders = coders;\n  }\n\n  encode(value: InputValueOf<TCoders>) {\n    const encodedFields = Object.keys(this.coders).map((fieldName) => {\n      const fieldCoder = this.coders[fieldName];\n      const fieldValue = value[fieldName];\n      if (!(fieldCoder instanceof OptionCoder) && fieldValue == null) {\n        this.throwError(\n          ErrorCode.ENCODE_ERROR,\n          `Invalid ${this.type}. Field \"${fieldName}\" not present.`\n        );\n      }\n      const encoded = fieldCoder.encode(fieldValue);\n      return encoded;\n    });\n\n    return concatWithDynamicData([concatWithDynamicData(encodedFields)]);\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoders>, number] {\n    let newOffset = offset;\n    const decodedValue = Object.keys(this.coders).reduce((obj, fieldName) => {\n      const fieldCoder = this.coders[fieldName];\n      let decoded;\n      [decoded, newOffset] = fieldCoder.decode(data, newOffset);\n      // eslint-disable-next-line no-param-reassign\n      obj[fieldName as keyof DecodedValueOf<TCoders>] = decoded;\n      return obj;\n    }, {} as DecodedValueOf<TCoders>);\n\n    return [decodedValue, newOffset];\n  }\n}\n","import { ErrorCode } from '@fuel-ts/errors';\n\nimport { concatWithDynamicData } from '../utilities';\n\nimport type { TypesOfCoder } from './abstract-coder';\nimport { Coder } from './abstract-coder';\n\ntype InputValueOf<TCoders extends Coder[]> = {\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Input'];\n};\ntype DecodedValueOf<TCoders extends Coder[]> = {\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Decoded'];\n};\n\nexport class TupleCoder<TCoders extends Coder[]> extends Coder<\n  InputValueOf<TCoders>,\n  DecodedValueOf<TCoders>\n> {\n  coders: TCoders;\n\n  constructor(coders: TCoders) {\n    const encodedLength = coders.reduce((acc, coder) => acc + coder.encodedLength, 0);\n    super('tuple', `(${coders.map((coder) => coder.type).join(', ')})`, encodedLength);\n    this.coders = coders;\n  }\n\n  encode(value: InputValueOf<TCoders>): Uint8Array {\n    if (this.coders.length !== value.length) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Types/values length mismatch.`);\n    }\n\n    return concatWithDynamicData(this.coders.map((coder, i) => coder.encode(value[i])));\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoders>, number] {\n    let newOffset = offset;\n    const decodedValue = this.coders.map((coder) => {\n      let decoded;\n      [decoded, newOffset] = coder.decode(data, newOffset);\n      return decoded;\n    });\n\n    return [decodedValue as DecodedValueOf<TCoders>, newOffset];\n  }\n}\n","import { ErrorCode } from '@fuel-ts/errors';\nimport { bn } from '@fuel-ts/math';\n\nimport type { Uint8ArrayWithDynamicData } from '../utilities';\nimport { concatWithDynamicData, BASE_VECTOR_OFFSET, chunkByLength } from '../utilities';\n\nimport type { TypesOfCoder } from './abstract-coder';\nimport { Coder } from './abstract-coder';\nimport { U64Coder } from './u64';\n\ntype InputValueOf<TCoder extends Coder> = Array<TypesOfCoder<TCoder>['Input']>;\ntype DecodedValueOf<TCoder extends Coder> = Array<TypesOfCoder<TCoder>['Decoded']>;\n\nexport class VecCoder<TCoder extends Coder> extends Coder<\n  InputValueOf<TCoder>,\n  DecodedValueOf<TCoder>\n> {\n  coder: TCoder;\n\n  constructor(coder: TCoder) {\n    super('struct', `struct Vec`, coder.encodedLength + BASE_VECTOR_OFFSET);\n    this.coder = coder;\n  }\n\n  encode(value: InputValueOf<TCoder>): Uint8Array {\n    if (!Array.isArray(value)) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Expected array value.`);\n    }\n\n    const parts: Uint8Array[] = [];\n\n    // pointer (ptr)\n    const pointer: Uint8ArrayWithDynamicData = new U64Coder().encode(BASE_VECTOR_OFFSET);\n    // pointer dynamicData, encode the vector now and attach to its pointer\n    pointer.dynamicData = {\n      0: concatWithDynamicData(Array.from(value).map((v) => this.coder.encode(v))),\n    };\n\n    parts.push(pointer);\n\n    // capacity (cap)\n    parts.push(new U64Coder().encode(value.length));\n\n    // length (len)\n    parts.push(new U64Coder().encode(value.length));\n\n    return concatWithDynamicData(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoder>, number] {\n    const len = data.slice(16, 24);\n    const length = bn(new U64Coder().decode(len, 0)[0]).toNumber();\n    const vectorRawData = data.slice(\n      BASE_VECTOR_OFFSET,\n      BASE_VECTOR_OFFSET + length * this.coder.encodedLength\n    );\n    return [\n      chunkByLength(vectorRawData, this.coder.encodedLength).map(\n        (chunk) => this.coder.decode(chunk, 0)[0]\n      ),\n      offset + BASE_VECTOR_OFFSET,\n    ];\n  }\n}\n","import { ErrorCode } from '@fuel-ts/errors';\nimport { bn } from '@fuel-ts/math';\nimport { concat } from '@fuel-ts/utils';\n\nimport { WORD_SIZE } from '../constants';\nimport type { Uint8ArrayWithDynamicData } from '../utilities';\nimport { BASE_VECTOR_OFFSET, concatWithDynamicData } from '../utilities';\n\nimport { Coder } from './abstract-coder';\nimport { U64Coder } from './u64';\n\nexport class ByteCoder extends Coder<number[], Uint8Array> {\n  static memorySize = 1;\n  constructor() {\n    super('struct', 'struct Bytes', BASE_VECTOR_OFFSET);\n  }\n\n  encode(value: number[]): Uint8Array {\n    if (!Array.isArray(value)) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Expected array value.`);\n    }\n\n    const parts: Uint8Array[] = [];\n\n    // pointer (ptr)\n    const pointer: Uint8ArrayWithDynamicData = new U64Coder().encode(BASE_VECTOR_OFFSET);\n\n    // pointer dynamicData, encode the byte vector now and attach to its pointer\n    const data = this.#getPaddedData(value);\n    pointer.dynamicData = {\n      0: concatWithDynamicData([data]),\n    };\n\n    parts.push(pointer);\n\n    // capacity (cap)\n    parts.push(new U64Coder().encode(data.byteLength));\n\n    // length (len)\n    parts.push(new U64Coder().encode(value.length));\n\n    return concatWithDynamicData(parts);\n  }\n\n  #getPaddedData(value: number[]): Uint8Array {\n    const data: Uint8Array[] = [Uint8Array.from(value)];\n\n    const paddingLength = (WORD_SIZE - (value.length % WORD_SIZE)) % WORD_SIZE;\n    if (paddingLength) {\n      data.push(new Uint8Array(paddingLength));\n    }\n\n    return concat(data);\n  }\n\n  decode(data: Uint8Array, offset: number): [Uint8Array, number] {\n    const len = data.slice(16, 24);\n    const length = bn(new U64Coder().decode(len, 0)[0]).toNumber();\n    const byteData = data.slice(BASE_VECTOR_OFFSET, BASE_VECTOR_OFFSET + length * 8);\n\n    return [byteData, offset + BASE_VECTOR_OFFSET];\n  }\n}\n","import { ErrorCode } from '@fuel-ts/errors';\nimport type { BN } from '@fuel-ts/math';\n\nimport { WORD_SIZE } from '../constants';\nimport type { Uint8ArrayWithDynamicData } from '../utilities';\nimport { BASE_RAW_SLICE_OFFSET, concatWithDynamicData } from '../utilities';\n\nimport { Coder } from './abstract-coder';\nimport { ArrayCoder } from './array';\nimport { U64Coder } from './u64';\n\nexport class RawSliceCoder extends Coder<number[], BN[]> {\n  constructor() {\n    super('raw untyped slice', 'raw untyped slice', BASE_RAW_SLICE_OFFSET);\n  }\n\n  encode(value: number[]): Uint8Array {\n    if (!Array.isArray(value)) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Expected array value.`);\n    }\n\n    const parts: Uint8Array[] = [];\n    const coder = new U64Coder();\n\n    // pointer (ptr)\n    const pointer: Uint8ArrayWithDynamicData = new U64Coder().encode(BASE_RAW_SLICE_OFFSET);\n\n    // pointer dynamicData, encode the vector now and attach to its pointer\n    pointer.dynamicData = {\n      0: concatWithDynamicData(value.map((v) => coder.encode(v))),\n    };\n\n    parts.push(pointer);\n\n    // length (len)\n    parts.push(new U64Coder().encode(value.length * WORD_SIZE));\n\n    return concatWithDynamicData(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [BN[], number] {\n    const internalCoder = new ArrayCoder(new U64Coder(), data.length / 8);\n    const decoded = internalCoder.decode(data, offset);\n\n    return decoded;\n  }\n}\n","import { bn } from '@fuel-ts/math';\nimport { concat } from '@fuel-ts/utils';\nimport { toUtf8Bytes, toUtf8String } from 'ethers';\n\nimport { WORD_SIZE } from '../constants';\nimport type { Uint8ArrayWithDynamicData } from '../utilities';\nimport { BASE_VECTOR_OFFSET, concatWithDynamicData } from '../utilities';\n\nimport { Coder } from './abstract-coder';\nimport { U64Coder } from './u64';\n\nexport class StdStringCoder extends Coder<string, string> {\n  static memorySize = 1;\n  constructor() {\n    super('struct', 'struct String', 1);\n  }\n\n  encode(value: string): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    // pointer (ptr)\n    const pointer: Uint8ArrayWithDynamicData = new U64Coder().encode(BASE_VECTOR_OFFSET);\n\n    // pointer dynamicData, encode the string vector now and attach to its pointer\n    const data = this.#getPaddedData(value);\n    pointer.dynamicData = {\n      0: concatWithDynamicData([data]),\n    };\n\n    parts.push(pointer);\n\n    // capacity (cap)\n    parts.push(new U64Coder().encode(data.byteLength));\n\n    // length (len)\n    parts.push(new U64Coder().encode(value.length));\n\n    return concatWithDynamicData(parts);\n  }\n\n  #getPaddedData(value: string): Uint8Array {\n    const data: Uint8Array[] = [toUtf8Bytes(value)];\n\n    const paddingLength = (WORD_SIZE - (value.length % WORD_SIZE)) % WORD_SIZE;\n    if (paddingLength) {\n      data.push(new Uint8Array(paddingLength));\n    }\n\n    return concat(data);\n  }\n\n  decode(data: Uint8Array, offset: number): [string, number] {\n    const len = data.slice(16, 24);\n    const length = bn(new U64Coder().decode(len, 0)[0]).toNumber();\n    const byteData = data.slice(BASE_VECTOR_OFFSET, BASE_VECTOR_OFFSET + length);\n    const value = toUtf8String(byteData);\n    return [value, offset + BASE_VECTOR_OFFSET];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport { arrayRegEx, enumRegEx, genericRegEx, stringRegEx, structRegEx } from './constants';\nimport type { JsonAbi, JsonAbiArgument } from './json-abi';\nimport { findOrThrow } from './utilities';\n\nexport class ResolvedAbiType {\n  readonly abi: JsonAbi;\n  name: string;\n  readonly type: string;\n  readonly originalTypeArguments: readonly JsonAbiArgument[] | null;\n  readonly components: readonly ResolvedAbiType[] | null;\n\n  constructor(abi: JsonAbi, argument: JsonAbiArgument) {\n    this.abi = abi;\n    const type = findOrThrow(\n      abi.types,\n      (t) => t.typeId === argument.type,\n      () => {\n        throw new FuelError(\n          ErrorCode.TYPE_NOT_FOUND,\n          `Type does not exist in the provided abi: ${JSON.stringify({\n            argument,\n            abi: this.abi,\n          })}`\n        );\n      }\n    );\n\n    this.name = argument.name;\n\n    this.type = type.type;\n    this.originalTypeArguments = argument.typeArguments;\n    this.components = ResolvedAbiType.getResolvedGenericComponents(\n      abi,\n      argument,\n      type.components,\n      type.typeParameters ?? ResolvedAbiType.getImplicitGenericTypeParameters(abi, type.components)\n    );\n  }\n\n  private static getResolvedGenericComponents(\n    abi: JsonAbi,\n    arg: JsonAbiArgument,\n    components: readonly JsonAbiArgument[] | null,\n    typeParameters: readonly number[] | null\n  ) {\n    if (components === null) {\n      return null;\n    }\n    if (typeParameters === null || typeParameters.length === 0) {\n      return components.map((c) => new ResolvedAbiType(abi, c));\n    }\n\n    const typeParametersAndArgsMap = typeParameters.reduce(\n      (obj, typeParameter, typeParameterIndex) => {\n        const o: Record<number, JsonAbiArgument> = { ...obj };\n        o[typeParameter] = structuredClone(\n          arg.typeArguments?.[typeParameterIndex]\n        ) as JsonAbiArgument;\n        return o;\n      },\n      {} as Record<number, JsonAbiArgument>\n    );\n\n    const resolvedComponents = this.resolveGenericArgTypes(\n      abi,\n      components,\n      typeParametersAndArgsMap\n    );\n\n    return resolvedComponents.map((c) => new ResolvedAbiType(abi, c));\n  }\n\n  private static resolveGenericArgTypes(\n    abi: JsonAbi,\n    args: readonly JsonAbiArgument[],\n    typeParametersAndArgsMap: Record<number, JsonAbiArgument>\n  ): readonly JsonAbiArgument[] {\n    return args.map((arg) => {\n      if (typeParametersAndArgsMap[arg.type] !== undefined) {\n        return {\n          ...typeParametersAndArgsMap[arg.type],\n          name: arg.name,\n        };\n      }\n\n      if (arg.typeArguments) {\n        return {\n          ...structuredClone(arg),\n          typeArguments: this.resolveGenericArgTypes(\n            abi,\n            arg.typeArguments,\n            typeParametersAndArgsMap\n          ),\n        };\n      }\n\n      const argType = findOrThrow(abi.types, (t) => t.typeId === arg.type);\n      const implicitTypeParameters = this.getImplicitGenericTypeParameters(abi, argType.components);\n\n      if (implicitTypeParameters && implicitTypeParameters.length > 0) {\n        return {\n          ...structuredClone(arg),\n          typeArguments: implicitTypeParameters.map((itp) => typeParametersAndArgsMap[itp]),\n        };\n      }\n\n      return arg;\n    });\n  }\n\n  private static getImplicitGenericTypeParameters(\n    abi: JsonAbi,\n    args: readonly JsonAbiArgument[] | null,\n    implicitGenericParametersParam?: number[]\n  ) {\n    if (!Array.isArray(args)) {\n      return null;\n    }\n\n    const implicitGenericParameters: number[] = implicitGenericParametersParam ?? [];\n\n    args.forEach((a) => {\n      const argType = findOrThrow(abi.types, (t) => t.typeId === a.type);\n\n      if (genericRegEx.test(argType.type)) {\n        implicitGenericParameters.push(argType.typeId);\n        return;\n      }\n\n      if (!Array.isArray(a.typeArguments)) {\n        return;\n      }\n      this.getImplicitGenericTypeParameters(abi, a.typeArguments, implicitGenericParameters);\n    });\n\n    return implicitGenericParameters.length > 0 ? implicitGenericParameters : null;\n  }\n\n  getSignature(): string {\n    const prefix = this.getArgSignaturePrefix();\n    const content = this.getArgSignatureContent();\n\n    return `${prefix}${content}`;\n  }\n\n  private getArgSignaturePrefix(): string {\n    const structMatch = structRegEx.test(this.type);\n    if (structMatch) {\n      return 's';\n    }\n\n    const arrayMatch = arrayRegEx.test(this.type);\n    if (arrayMatch) {\n      return 'a';\n    }\n\n    const enumMatch = enumRegEx.test(this.type);\n    if (enumMatch) {\n      return 'e';\n    }\n\n    return '';\n  }\n\n  private getArgSignatureContent(): string {\n    if (this.type === 'raw untyped ptr') {\n      return 'rawptr';\n    }\n\n    if (this.type === 'raw untyped slice') {\n      return 'rawslice';\n    }\n\n    const strMatch = stringRegEx.exec(this.type)?.groups;\n    if (strMatch) {\n      return `str[${strMatch.length}]`;\n    }\n\n    if (this.components === null) {\n      return this.type;\n    }\n\n    const arrayMatch = arrayRegEx.exec(this.type)?.groups;\n\n    if (arrayMatch) {\n      return `[${this.components[0].getSignature()};${arrayMatch.length}]`;\n    }\n\n    const typeArgumentsSignature =\n      this.originalTypeArguments !== null\n        ? `<${this.originalTypeArguments\n            .map((a) => new ResolvedAbiType(this.abi, a).getSignature())\n            .join(',')}>`\n        : '';\n\n    const componentsSignature = `(${this.components.map((c) => c.getSignature()).join(',')})`;\n\n    return `${typeArgumentsSignature}${componentsSignature}`;\n  }\n}\n","// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport type { DecodedValue, InputValue, Coder } from './coders/abstract-coder';\nimport { ArrayCoder } from './coders/array';\nimport { B256Coder } from './coders/b256';\nimport { B512Coder } from './coders/b512';\nimport { BooleanCoder } from './coders/boolean';\nimport { ByteCoder } from './coders/byte';\nimport { EnumCoder } from './coders/enum';\nimport { NumberCoder } from './coders/number';\nimport { OptionCoder } from './coders/option';\nimport { RawSliceCoder } from './coders/raw-slice';\nimport { StdStringCoder } from './coders/stdString';\nimport { StringCoder } from './coders/string';\nimport { StructCoder } from './coders/struct';\nimport { TupleCoder } from './coders/tuple';\nimport { U64Coder } from './coders/u64';\nimport { VecCoder } from './coders/vec';\nimport {\n  arrayRegEx,\n  enumRegEx,\n  stringRegEx,\n  structRegEx,\n  tupleRegEx,\n  OPTION_CODER_TYPE,\n  VEC_CODER_TYPE,\n  BYTES_CODER_TYPE,\n  STD_STRING_CODER_TYPE,\n} from './constants';\nimport type { JsonAbi, JsonAbiArgument } from './json-abi';\nimport { ResolvedAbiType } from './resolved-abi-type';\nimport { findOrThrow } from './utilities';\n\nexport abstract class AbiCoder {\n  static getCoder(abi: JsonAbi, argument: JsonAbiArgument): Coder {\n    const resolvedAbiType = new ResolvedAbiType(abi, argument);\n\n    return AbiCoder.getCoderImpl(resolvedAbiType);\n  }\n\n  static encode(abi: JsonAbi, argument: JsonAbiArgument, value: InputValue) {\n    return this.getCoder(abi, argument).encode(value);\n  }\n\n  static decode(\n    abi: JsonAbi,\n    argument: JsonAbiArgument,\n    data: Uint8Array,\n    offset: number\n  ): [DecodedValue | undefined, number] {\n    return this.getCoder(abi, argument).decode(data, offset) as [DecodedValue | undefined, number];\n  }\n\n  private static getCoderImpl(resolvedAbiType: ResolvedAbiType): Coder {\n    switch (resolvedAbiType.type) {\n      case 'u8':\n      case 'u16':\n      case 'u32':\n        return new NumberCoder(resolvedAbiType.type);\n      case 'u64':\n      case 'raw untyped ptr':\n        return new U64Coder();\n      case 'raw untyped slice':\n        return new RawSliceCoder();\n      case 'bool':\n        return new BooleanCoder();\n      case 'b256':\n        return new B256Coder();\n      case 'struct B512':\n        return new B512Coder();\n      case BYTES_CODER_TYPE:\n        return new ByteCoder();\n      case STD_STRING_CODER_TYPE:\n        return new StdStringCoder();\n      default:\n        break;\n    }\n\n    const stringMatch = stringRegEx.exec(resolvedAbiType.type)?.groups;\n    if (stringMatch) {\n      const length = parseInt(stringMatch.length, 10);\n\n      return new StringCoder(length);\n    }\n\n    // ABI types underneath MUST have components by definition\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const components = resolvedAbiType.components!;\n\n    const arrayMatch = arrayRegEx.exec(resolvedAbiType.type)?.groups;\n    if (arrayMatch) {\n      const length = parseInt(arrayMatch.length, 10);\n      const arg = components[0];\n      if (!arg) {\n        throw new FuelError(\n          ErrorCode.INVALID_COMPONENT,\n          `The provided Array type is missing an item of 'component'.`\n        );\n      }\n\n      const arrayElementCoder = AbiCoder.getCoderImpl(arg);\n      return new ArrayCoder(arrayElementCoder, length);\n    }\n\n    if (resolvedAbiType.type === VEC_CODER_TYPE) {\n      const arg = findOrThrow(components, (c) => c.name === 'buf').originalTypeArguments?.[0];\n      if (!arg) {\n        throw new FuelError(\n          ErrorCode.INVALID_COMPONENT,\n          `The provided Vec type is missing the 'type argument'.`\n        );\n      }\n      const argType = new ResolvedAbiType(resolvedAbiType.abi, arg);\n\n      const itemCoder = AbiCoder.getCoderImpl(argType);\n      return new VecCoder(itemCoder);\n    }\n\n    const structMatch = structRegEx.exec(resolvedAbiType.type)?.groups;\n    if (structMatch) {\n      const coders = AbiCoder.getCoders(components);\n      return new StructCoder(structMatch.name, coders);\n    }\n\n    const enumMatch = enumRegEx.exec(resolvedAbiType.type)?.groups;\n    if (enumMatch) {\n      const coders = AbiCoder.getCoders(components);\n\n      const isOptionEnum = resolvedAbiType.type === OPTION_CODER_TYPE;\n      if (isOptionEnum) {\n        return new OptionCoder(enumMatch.name, coders);\n      }\n      return new EnumCoder(enumMatch.name, coders);\n    }\n\n    const tupleMatch = tupleRegEx.exec(resolvedAbiType.type)?.groups;\n    if (tupleMatch) {\n      const coders = components.map((component) => AbiCoder.getCoderImpl(component));\n      return new TupleCoder(coders);\n    }\n\n    if (resolvedAbiType.type === 'str') {\n      throw new FuelError(\n        ErrorCode.INVALID_DATA,\n        'String slices can not be decoded from logs. Convert the slice to `str[N]` with `__to_str_array`'\n      );\n    }\n\n    throw new FuelError(\n      ErrorCode.CODER_NOT_FOUND,\n      `Coder not found: ${JSON.stringify(resolvedAbiType)}.`\n    );\n  }\n\n  private static getCoders(components: readonly ResolvedAbiType[]) {\n    return components.reduce((obj, component) => {\n      const o: Record<string, Coder> = obj;\n\n      o[component.name] = AbiCoder.getCoderImpl(component);\n      return o;\n    }, {});\n  }\n}\n","export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n","// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\n// The file will throw on node.js 14 and earlier.\n// @ts-ignore\nimport * as nc from 'node:crypto';\nexport const crypto =\n  nc && typeof nc === 'object' && 'webcrypto' in nc ? (nc.webcrypto as any) : undefined;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n","import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","import assert from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assert.hash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assert.number(c);\n  assert.number(dkLen);\n  assert.number(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, (i) => {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n","import assert from './_assert.js';\nimport { sha256 } from './sha256.js';\nimport { pbkdf2 } from './pbkdf2.js';\nimport { asyncLoop, checkOpts, Input, u32 } from './utils.js';\n\n// RFC 7914 Scrypt KDF\n\n// Left rotate for uint32\nconst rotl = (a: number, b: number) => (a << b) | (a >>> (32 - b));\n\n// The main Scrypt loop: uses Salsa extensively.\n// Six versions of the function were tried, this is the fastest one.\n// prettier-ignore\nfunction XorAndSalsa(\n  prev: Uint32Array,\n  pi: number,\n  input: Uint32Array,\n  ii: number,\n  out: Uint32Array,\n  oi: number\n) {\n  // Based on https://cr.yp.to/salsa20.html\n  // Xor blocks\n  let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n  let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n  let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n  let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n  let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n  let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n  let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n  let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n  // Save state to temporary variables (salsa)\n  let x00 = y00, x01 = y01, x02 = y02, x03 = y03,\n      x04 = y04, x05 = y05, x06 = y06, x07 = y07,\n      x08 = y08, x09 = y09, x10 = y10, x11 = y11,\n      x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n  // Main loop (salsa)\n  for (let i = 0; i < 8; i += 2) {\n    x04 ^= rotl(x00 + x12 | 0,  7); x08 ^= rotl(x04 + x00 | 0,  9);\n    x12 ^= rotl(x08 + x04 | 0, 13); x00 ^= rotl(x12 + x08 | 0, 18);\n    x09 ^= rotl(x05 + x01 | 0,  7); x13 ^= rotl(x09 + x05 | 0,  9);\n    x01 ^= rotl(x13 + x09 | 0, 13); x05 ^= rotl(x01 + x13 | 0, 18);\n    x14 ^= rotl(x10 + x06 | 0,  7); x02 ^= rotl(x14 + x10 | 0,  9);\n    x06 ^= rotl(x02 + x14 | 0, 13); x10 ^= rotl(x06 + x02 | 0, 18);\n    x03 ^= rotl(x15 + x11 | 0,  7); x07 ^= rotl(x03 + x15 | 0,  9);\n    x11 ^= rotl(x07 + x03 | 0, 13); x15 ^= rotl(x11 + x07 | 0, 18);\n    x01 ^= rotl(x00 + x03 | 0,  7); x02 ^= rotl(x01 + x00 | 0,  9);\n    x03 ^= rotl(x02 + x01 | 0, 13); x00 ^= rotl(x03 + x02 | 0, 18);\n    x06 ^= rotl(x05 + x04 | 0,  7); x07 ^= rotl(x06 + x05 | 0,  9);\n    x04 ^= rotl(x07 + x06 | 0, 13); x05 ^= rotl(x04 + x07 | 0, 18);\n    x11 ^= rotl(x10 + x09 | 0,  7); x08 ^= rotl(x11 + x10 | 0,  9);\n    x09 ^= rotl(x08 + x11 | 0, 13); x10 ^= rotl(x09 + x08 | 0, 18);\n    x12 ^= rotl(x15 + x14 | 0,  7); x13 ^= rotl(x12 + x15 | 0,  9);\n    x14 ^= rotl(x13 + x12 | 0, 13); x15 ^= rotl(x14 + x13 | 0, 18);\n  }\n  // Write output (salsa)\n  out[oi++] = (y00 + x00) | 0; out[oi++] = (y01 + x01) | 0;\n  out[oi++] = (y02 + x02) | 0; out[oi++] = (y03 + x03) | 0;\n  out[oi++] = (y04 + x04) | 0; out[oi++] = (y05 + x05) | 0;\n  out[oi++] = (y06 + x06) | 0; out[oi++] = (y07 + x07) | 0;\n  out[oi++] = (y08 + x08) | 0; out[oi++] = (y09 + x09) | 0;\n  out[oi++] = (y10 + x10) | 0; out[oi++] = (y11 + x11) | 0;\n  out[oi++] = (y12 + x12) | 0; out[oi++] = (y13 + x13) | 0;\n  out[oi++] = (y14 + x14) | 0; out[oi++] = (y15 + x15) | 0;\n}\n\nfunction BlockMix(input: Uint32Array, ii: number, out: Uint32Array, oi: number, r: number) {\n  // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)\n  let head = oi + 0;\n  let tail = oi + 16 * r;\n  for (let i = 0; i < 16; i++) out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X ← B[2r−1]\n  for (let i = 0; i < r; i++, head += 16, ii += 16) {\n    // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1\n    XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])\n    if (i > 0) tail += 16; // First iteration overwrites tmp value in tail\n    XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])\n  }\n}\n\nexport type ScryptOpts = {\n  N: number; // cost factor\n  r: number; // block size\n  p: number; // parallelization\n  dkLen?: number; // key length\n  asyncTick?: number; // block execution max time\n  maxmem?: number;\n  onProgress?: (progress: number) => void;\n};\n\n// Common prologue and epilogue for sync/async functions\nfunction scryptInit(password: Input, salt: Input, _opts?: ScryptOpts) {\n  // Maxmem - 1GB+1KB by default\n  const opts = checkOpts(\n    {\n      dkLen: 32,\n      asyncTick: 10,\n      maxmem: 1024 ** 3 + 1024,\n    },\n    _opts\n  );\n  const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;\n  assert.number(N);\n  assert.number(r);\n  assert.number(p);\n  assert.number(dkLen);\n  assert.number(asyncTick);\n  assert.number(maxmem);\n  if (onProgress !== undefined && typeof onProgress !== 'function')\n    throw new Error('progressCb should be function');\n  const blockSize = 128 * r;\n  const blockSize32 = blockSize / 4;\n  if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {\n    // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function\n    // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.\n    throw new Error(\n      'Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32'\n    );\n  }\n  if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {\n    throw new Error(\n      'Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)'\n    );\n  }\n  if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {\n    throw new Error(\n      'Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32'\n    );\n  }\n  const memUsed = blockSize * (N + p);\n  if (memUsed > maxmem) {\n    throw new Error(\n      `Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`\n    );\n  }\n  // [B0...Bp−1] ← PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)\n  // Since it has only one iteration there is no reason to use async variant\n  const B = pbkdf2(sha256, password, salt, { c: 1, dkLen: blockSize * p });\n  const B32 = u32(B);\n  // Re-used between parallel iterations. Array(iterations) of B\n  const V = u32(new Uint8Array(blockSize * N));\n  const tmp = u32(new Uint8Array(blockSize));\n  let blockMixCb = () => {};\n  if (onProgress) {\n    const totalBlockMix = 2 * N * p;\n    // Invoke callback if progress changes from 10.01 to 10.02\n    // Allows to draw smooth progress bar on up to 8K screen\n    const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);\n    let blockMixCnt = 0;\n    blockMixCb = () => {\n      blockMixCnt++;\n      if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))\n        onProgress(blockMixCnt / totalBlockMix);\n    };\n  }\n  return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };\n}\n\nfunction scryptOutput(\n  password: Input,\n  dkLen: number,\n  B: Uint8Array,\n  V: Uint32Array,\n  tmp: Uint32Array\n) {\n  const res = pbkdf2(sha256, password, B, { c: 1, dkLen });\n  B.fill(0);\n  V.fill(0);\n  tmp.fill(0);\n  return res;\n}\n\n/**\n * Scrypt KDF from RFC 7914.\n * @param password - pass\n * @param salt - salt\n * @param opts - parameters\n * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)\n * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance\n * - `p` is parallelization factor (1 is common)\n * - `dkLen` is output key length in bytes e.g. 32.\n * - `asyncTick` - (default: 10) max time in ms for which async function can block execution\n * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt\n * - `onProgress` - callback function that would be executed for progress report\n * @returns Derived key\n */\nexport function scrypt(password: Input, salt: Input, opts: ScryptOpts) {\n  const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(\n    password,\n    salt,\n    opts\n  );\n  for (let pi = 0; pi < p; pi++) {\n    const Pi = blockSize32 * pi;\n    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]\n    for (let i = 0, pos = 0; i < N - 1; i++) {\n      BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n      blockMixCb();\n    }\n    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n    blockMixCb();\n    for (let i = 0; i < N; i++) {\n      // First u32 of the last 64-byte block (u32 is LE)\n      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n      blockMixCb();\n    }\n  }\n  return scryptOutput(password, dkLen, B, V, tmp);\n}\n\n/**\n * Scrypt KDF from RFC 7914.\n */\nexport async function scryptAsync(password: Input, salt: Input, opts: ScryptOpts) {\n  const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(\n    password,\n    salt,\n    opts\n  );\n  for (let pi = 0; pi < p; pi++) {\n    const Pi = blockSize32 * pi;\n    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]\n    let pos = 0;\n    await asyncLoop(N - 1, asyncTick, (i) => {\n      BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n      blockMixCb();\n    });\n    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n    blockMixCb();\n    await asyncLoop(N, asyncTick, (i) => {\n      // First u32 of the last 64-byte block (u32 is LE)\n      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n      blockMixCb();\n    });\n  }\n  return scryptOutput(password, dkLen, B, V, tmp);\n}\n","import assert from \"@noble/hashes/_assert\";\nimport { hexToBytes as _hexToBytes } from \"@noble/hashes/utils\";\nconst assertBool = assert.bool;\nconst assertBytes = assert.bytes;\nexport { assertBool, assertBytes };\nexport { bytesToHex, bytesToHex as toHex, concatBytes, createView, utf8ToBytes } from \"@noble/hashes/utils\";\n// buf.toString('utf8') -> bytesToUtf8(buf)\nexport function bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexport function hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return _hexToBytes(sliced);\n}\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nexport function equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n// Internal utils\nexport function wrapHash(hash) {\n    return (msg) => {\n        assert.bytes(msg);\n        return hash(msg);\n    };\n}\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexport const crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n","import { scrypt as _sync, scryptAsync as _async } from \"@noble/hashes/scrypt\";\nimport { assertBytes } from \"./utils.js\";\nexport async function scrypt(password, salt, n, p, r, dkLen, onProgress) {\n    assertBytes(password);\n    assertBytes(salt);\n    return _async(password, salt, { N: n, r, p, dkLen, onProgress });\n}\nexport function scryptSync(password, salt, n, p, r, dkLen, onProgress) {\n    assertBytes(password);\n    assertBytes(salt);\n    return _sync(password, salt, { N: n, r, p, dkLen, onProgress });\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nexport function split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nexport const toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h: number, l: number) => l;\nconst rotr32L = (h: number, l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) =>\n  s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h: number, l: number, s: number) =>\n  s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    assert.number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    assert.exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    assert.exists(this, false);\n    assert.bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    assert.number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    assert.output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","import { keccak_224, keccak_256, keccak_384, keccak_512 } from \"@noble/hashes/sha3\";\nimport { wrapHash } from \"./utils.js\";\nexport const keccak224 = wrapHash(keccak_224);\nexport const keccak256 = (() => {\n    const k = wrapHash(keccak_256);\n    k.create = keccak_256.create;\n    return k;\n})();\nexport const keccak384 = wrapHash(keccak_384);\nexport const keccak512 = wrapHash(keccak_512);\n","import { scryptSync as ethCryScrypt } from 'ethereum-cryptography/scrypt';\n\nimport type { IScryptParams } from '../types';\n\nexport const scrypt = (params: IScryptParams): Uint8Array => {\n  const { password, salt, n, p, r, dklen } = params;\n\n  const derivedKey = ethCryScrypt(password, salt, n, r, p, dklen);\n\n  return derivedKey;\n};\n","import { keccak256 as keccak } from 'ethereum-cryptography/keccak';\n\nexport const keccak256 = (data: Uint8Array): Uint8Array => keccak(data);\n","import { FuelError, ErrorCode } from '@fuel-ts/errors';\nimport crypto from 'crypto';\nimport { getBytesCopy, pbkdf2 } from 'ethers';\n\nimport type { CryptoApi, Keystore } from '../types';\n\nimport { bufferFromString } from './bufferFromString';\nimport { randomBytes } from './randomBytes';\nimport { stringFromBuffer } from './stringFromBuffer';\n\nconst ALGORITHM = 'aes-256-ctr';\n\n/**\n * Generate a pbkdf2 key from a password and random salt\n */\nexport const keyFromPassword: CryptoApi['keyFromPassword'] = (\n  password: string,\n  saltBuffer: Uint8Array\n): Uint8Array => {\n  const passBuffer = bufferFromString(String(password).normalize('NFKC'), 'utf-8');\n  const key = pbkdf2(passBuffer, saltBuffer, 100000, 32, 'sha256');\n\n  return getBytesCopy(key);\n};\n\n/**\n * Encrypts a data object that can be any serializable value using\n * a provided password.\n *\n * @returns Promise<Keystore> object\n */\nexport const encrypt: CryptoApi['encrypt'] = async <T>(\n  password: string,\n  data: T\n): Promise<Keystore> => {\n  const iv = randomBytes(16);\n  const salt = randomBytes(32);\n  const secret = keyFromPassword(password, salt);\n  const dataBuffer = Uint8Array.from(Buffer.from(JSON.stringify(data), 'utf-8'));\n\n  const cipher = await crypto.createCipheriv(ALGORITHM, secret, iv);\n  let cipherData = cipher.update(dataBuffer);\n  cipherData = Buffer.concat([cipherData, cipher.final()]);\n\n  return {\n    data: stringFromBuffer(cipherData),\n    iv: stringFromBuffer(iv),\n    salt: stringFromBuffer(salt),\n  };\n};\n\n/**\n * Given a password and a keystore object, decrypts the text and returns\n * the resulting value\n */\nexport const decrypt: CryptoApi['decrypt'] = async <T>(\n  password: string,\n  keystore: Keystore\n): Promise<T> => {\n  const iv = bufferFromString(keystore.iv);\n  const salt = bufferFromString(keystore.salt);\n  const secret = keyFromPassword(password, salt);\n  const encryptedText = bufferFromString(keystore.data);\n\n  const decipher = await crypto.createDecipheriv(ALGORITHM, secret, iv);\n  const decrypted = decipher.update(encryptedText);\n  const deBuff = Buffer.concat([decrypted, decipher.final()]);\n  const decryptedData = Buffer.from(deBuff).toString('utf-8');\n\n  try {\n    return JSON.parse(decryptedData);\n  } catch {\n    throw new FuelError(ErrorCode.INVALID_CREDENTIALS, 'Invalid credentials.');\n  }\n};\n","import type { CryptoApi, Encoding } from '../types';\n\nexport const bufferFromString: CryptoApi['bufferFromString'] = (\n  string: string,\n  encoding: Encoding = 'base64'\n): Uint8Array => Uint8Array.from(Buffer.from(string, encoding));\n","import crypto from 'crypto';\n\nimport type { CryptoApi } from '../types';\n\nexport const randomBytes: CryptoApi['randomBytes'] = (length: number): Uint8Array => {\n  const randomValues = Uint8Array.from(crypto.randomBytes(length));\n  return randomValues;\n};\n","import type { CryptoApi, Encoding } from '../types';\n\nexport const stringFromBuffer: CryptoApi['stringFromBuffer'] = (\n  buffer: Uint8Array,\n  encoding: Encoding = 'base64'\n): string => Buffer.from(buffer).toString(encoding);\n","import crypto from 'crypto';\n\nexport async function encryptJsonWalletData(data: Uint8Array, key: Uint8Array, iv: Uint8Array) {\n  const cipher = await crypto.createCipheriv('aes-128-ctr', key.subarray(0, 16), iv);\n\n  const encrypted = Buffer.concat([cipher.update(data), cipher.final()]);\n\n  return new Uint8Array(encrypted);\n}\n\nexport async function decryptJsonWalletData(data: Uint8Array, key: Uint8Array, iv: Uint8Array) {\n  const decipher = crypto.createDecipheriv('aes-128-ctr', key.subarray(0, 16), iv);\n\n  const decrypted = await Buffer.concat([decipher.update(data), decipher.final()]);\n\n  return new Uint8Array(decrypted);\n}\n","import { scrypt, keccak256 } from '../shared';\nimport type { CryptoApi } from '../types';\n\nimport { decrypt, encrypt, keyFromPassword } from './aes-ctr';\nimport { bufferFromString } from './bufferFromString';\nimport { decryptJsonWalletData, encryptJsonWalletData } from './encryptJsonWalletData';\nimport { randomBytes } from './randomBytes';\nimport { stringFromBuffer } from './stringFromBuffer';\n\nconst api: CryptoApi = {\n  bufferFromString,\n  stringFromBuffer,\n  decrypt,\n  encrypt,\n  keyFromPassword,\n  randomBytes,\n  scrypt,\n  keccak256,\n  decryptJsonWalletData,\n  encryptJsonWalletData,\n};\n\nexport default api;\n","import cryptoApi from './node';\n\nexport * from './types';\n\nexport const {\n  bufferFromString,\n  decrypt,\n  encrypt,\n  keyFromPassword,\n  randomBytes,\n  stringFromBuffer,\n  scrypt,\n  keccak256,\n  decryptJsonWalletData,\n  encryptJsonWalletData,\n} = cryptoApi;\n","import { bufferFromString } from '@fuel-ts/crypto';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { bn } from '@fuel-ts/math';\nimport type { BytesLike } from 'ethers';\nimport { sha256, getBytesCopy } from 'ethers';\n\nimport { AbiCoder } from './abi-coder';\nimport type { DecodedValue, InputValue } from './coders/abstract-coder';\nimport type { ArrayCoder } from './coders/array';\nimport { ByteCoder } from './coders/byte';\nimport { TupleCoder } from './coders/tuple';\nimport type { U64Coder } from './coders/u64';\nimport { VecCoder } from './coders/vec';\nimport { OPTION_CODER_TYPE } from './constants';\nimport type {\n  JsonAbi,\n  JsonAbiArgument,\n  JsonAbiFunction,\n  JsonAbiFunctionAttribute,\n} from './json-abi';\nimport { ResolvedAbiType } from './resolved-abi-type';\nimport type { Uint8ArrayWithDynamicData } from './utilities';\nimport { isPointerType, unpackDynamicData, findOrThrow, isHeapType } from './utilities';\n\nexport class FunctionFragment<\n  TAbi extends JsonAbi = JsonAbi,\n  FnName extends TAbi['functions'][number]['name'] = string,\n> {\n  readonly signature: string;\n  readonly selector: string;\n  readonly name: string;\n  readonly jsonFn: JsonAbiFunction;\n  readonly attributes: readonly JsonAbiFunctionAttribute[];\n  readonly isInputDataPointer: boolean;\n  readonly outputMetadata: {\n    isHeapType: boolean;\n    encodedLength: number;\n  };\n\n  private readonly jsonAbi: JsonAbi;\n\n  constructor(jsonAbi: JsonAbi, name: FnName) {\n    this.jsonAbi = jsonAbi;\n    this.jsonFn = findOrThrow(this.jsonAbi.functions, (f) => f.name === name);\n    this.name = name;\n    this.signature = FunctionFragment.getSignature(this.jsonAbi, this.jsonFn);\n    this.selector = FunctionFragment.getFunctionSelector(this.signature);\n    this.isInputDataPointer = this.#isInputDataPointer();\n    this.outputMetadata = {\n      isHeapType: this.#isOutputDataHeap(),\n      encodedLength: this.#getOutputEncodedLength(),\n    };\n\n    this.attributes = this.jsonFn.attributes ?? [];\n  }\n\n  private static getSignature(abi: JsonAbi, fn: JsonAbiFunction): string {\n    const inputsSignatures = fn.inputs.map((input) =>\n      new ResolvedAbiType(abi, input).getSignature()\n    );\n    return `${fn.name}(${inputsSignatures.join(',')})`;\n  }\n\n  private static getFunctionSelector(functionSignature: string) {\n    const hashedFunctionSignature = sha256(bufferFromString(functionSignature, 'utf-8'));\n    // get first 4 bytes of signature + 0x prefix. then left-pad it to 8 bytes using toHex(8)\n    return bn(hashedFunctionSignature.slice(0, 10)).toHex(8);\n  }\n\n  #isInputDataPointer(): boolean {\n    const inputTypes = this.jsonFn.inputs.map((i) =>\n      this.jsonAbi.types.find((t) => t.typeId === i.type)\n    );\n\n    return this.jsonFn.inputs.length > 1 || isPointerType(inputTypes[0]?.type || '');\n  }\n\n  #isOutputDataHeap(): boolean {\n    const outputType = findOrThrow(this.jsonAbi.types, (t) => t.typeId === this.jsonFn.output.type);\n\n    return isHeapType(outputType?.type || '');\n  }\n\n  #getOutputEncodedLength(): number {\n    try {\n      const heapCoder = AbiCoder.getCoder(this.jsonAbi, this.jsonFn.output);\n      if (heapCoder instanceof VecCoder) {\n        return heapCoder.coder.encodedLength;\n      }\n      if (heapCoder instanceof ByteCoder) {\n        return ByteCoder.memorySize;\n      }\n\n      return heapCoder.encodedLength;\n    } catch (e) {\n      return 0;\n    }\n  }\n\n  encodeArguments(values: InputValue[], offset = 0): Uint8Array {\n    FunctionFragment.verifyArgsAndInputsAlign(values, this.jsonFn.inputs, this.jsonAbi);\n\n    const shallowCopyValues = values.slice();\n\n    const nonEmptyInputs = this.jsonFn.inputs.filter(\n      (x) => findOrThrow(this.jsonAbi.types, (t) => t.typeId === x.type).type !== '()'\n    );\n\n    if (Array.isArray(values) && nonEmptyInputs.length !== values.length) {\n      shallowCopyValues.length = this.jsonFn.inputs.length;\n      shallowCopyValues.fill(undefined as unknown as InputValue, values.length);\n    }\n\n    const coders = nonEmptyInputs.map((t) => AbiCoder.getCoder(this.jsonAbi, t));\n\n    const coder = new TupleCoder(coders);\n    const results: Uint8ArrayWithDynamicData = coder.encode(shallowCopyValues);\n\n    return unpackDynamicData(results, offset, results.byteLength);\n  }\n\n  private static verifyArgsAndInputsAlign(\n    args: InputValue[],\n    inputs: readonly JsonAbiArgument[],\n    abi: JsonAbi\n  ) {\n    if (args.length === inputs.length) {\n      return;\n    }\n\n    const inputTypes = inputs.map((i) => findOrThrow(abi.types, (t) => t.typeId === i.type));\n    const optionalInputs = inputTypes.filter(\n      (x) => x.type === OPTION_CODER_TYPE || x.type === '()'\n    );\n    if (optionalInputs.length === inputTypes.length) {\n      return;\n    }\n    if (inputTypes.length - optionalInputs.length === args.length) {\n      return;\n    }\n\n    const errorMsg = `Mismatch between provided arguments and expected ABI inputs. Provided ${\n      args.length\n    } arguments, but expected ${inputs.length - optionalInputs.length} (excluding ${\n      optionalInputs.length\n    } optional inputs).`;\n\n    throw new FuelError(ErrorCode.ABI_TYPES_AND_VALUES_MISMATCH, errorMsg);\n  }\n\n  decodeArguments(data: BytesLike) {\n    const bytes = getBytesCopy(data);\n    const nonEmptyInputs = this.jsonFn.inputs.filter(\n      (x) => findOrThrow(this.jsonAbi.types, (t) => t.typeId === x.type).type !== '()'\n    );\n\n    if (nonEmptyInputs.length === 0) {\n      // The VM is current return 0x0000000000000000, but we should treat it as undefined / void\n      if (bytes.length === 0) {\n        return undefined;\n      }\n\n      throw new FuelError(\n        ErrorCode.DECODE_ERROR,\n        `Types/values length mismatch during decode. ${JSON.stringify({\n          count: {\n            types: this.jsonFn.inputs.length,\n            nonEmptyInputs: nonEmptyInputs.length,\n            values: bytes.length,\n          },\n          value: {\n            args: this.jsonFn.inputs,\n            nonEmptyInputs,\n            values: bytes,\n          },\n        })}`\n      );\n    }\n\n    const result = nonEmptyInputs.reduce(\n      (obj: { decoded: unknown[]; offset: number }, input) => {\n        const coder = AbiCoder.getCoder(this.jsonAbi, input);\n        const [decodedValue, decodedValueByteSize] = coder.decode(bytes, obj.offset);\n\n        return {\n          decoded: [...obj.decoded, decodedValue],\n          offset: obj.offset + decodedValueByteSize,\n        };\n      },\n      { decoded: [], offset: 0 }\n    );\n\n    return result.decoded;\n  }\n\n  decodeOutput(data: BytesLike): [DecodedValue | undefined, number] {\n    const outputAbiType = findOrThrow(\n      this.jsonAbi.types,\n      (t) => t.typeId === this.jsonFn.output.type\n    );\n    if (outputAbiType.type === '()') {\n      return [undefined, 0];\n    }\n\n    const bytes = getBytesCopy(data);\n    const coder = AbiCoder.getCoder(this.jsonAbi, this.jsonFn.output);\n\n    if (outputAbiType.type === 'raw untyped slice') {\n      (coder as ArrayCoder<U64Coder>).length = bytes.length / 8;\n    }\n\n    return coder.decode(bytes, 0) as [DecodedValue | undefined, number];\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { getBytesCopy, type BytesLike } from 'ethers';\n\nimport { AbiCoder } from './abi-coder';\nimport type { InputValue } from './coders/abstract-coder';\nimport { FunctionFragment } from './function-fragment';\nimport type { JsonAbi, JsonAbiConfigurable } from './json-abi';\nimport { findOrThrow } from './utilities';\n\nexport class Interface<TAbi extends JsonAbi = JsonAbi> {\n  readonly functions!: Record<string, FunctionFragment>;\n\n  readonly configurables: Record<string, JsonAbiConfigurable>;\n  /*\n  TODO: Refactor so that there's no need for externalLoggedTypes\n\n  This is dedicated to external contracts added via `<base-invocation-scope.ts>.addContracts()` method.\n  This is used to decode logs from contracts other than the main contract\n  we're interacting with.\n  */\n  private externalLoggedTypes: Record<string, Interface>;\n  readonly jsonAbi: TAbi;\n\n  constructor(jsonAbi: TAbi) {\n    this.jsonAbi = jsonAbi;\n\n    this.externalLoggedTypes = {};\n\n    this.functions = Object.fromEntries(\n      this.jsonAbi.functions.map((x) => [x.name, new FunctionFragment(this.jsonAbi, x.name)])\n    );\n\n    this.configurables = Object.fromEntries(this.jsonAbi.configurables.map((x) => [x.name, x]));\n  }\n\n  /**\n   * Returns function fragment for a dynamic input.\n   * @param nameOrSignatureOrSelector - name (e.g. 'transfer'), signature (e.g. 'transfer(address,uint256)') or selector (e.g. '0x00000000a9059cbb') of the function fragment\n   */\n  getFunction(nameOrSignatureOrSelector: string): FunctionFragment {\n    const fn = Object.values<FunctionFragment>(this.functions).find(\n      (f) =>\n        f.name === nameOrSignatureOrSelector ||\n        f.signature === nameOrSignatureOrSelector ||\n        f.selector === nameOrSignatureOrSelector\n    );\n\n    if (fn !== undefined) {\n      return fn;\n    }\n\n    throw new FuelError(\n      ErrorCode.FUNCTION_NOT_FOUND,\n      `function ${nameOrSignatureOrSelector} not found: ${JSON.stringify(fn)}.`\n    );\n  }\n\n  decodeFunctionData(functionFragment: FunctionFragment | string, data: BytesLike): any {\n    const fragment =\n      typeof functionFragment === 'string' ? this.getFunction(functionFragment) : functionFragment;\n\n    if (!fragment) {\n      throw new FuelError(ErrorCode.FRAGMENT_NOT_FOUND, 'Fragment not found.');\n    }\n\n    return fragment.decodeArguments(data);\n  }\n\n  encodeFunctionData(\n    functionFragment: FunctionFragment | string,\n    values: Array<InputValue>,\n    offset = 0\n  ): Uint8Array {\n    const fragment =\n      typeof functionFragment === 'string' ? this.getFunction(functionFragment) : functionFragment;\n\n    if (!fragment) {\n      throw new FuelError(ErrorCode.FRAGMENT_NOT_FOUND, 'Fragment not found.');\n    }\n\n    return fragment.encodeArguments(values, offset);\n  }\n\n  // Decode the result of a function call\n  decodeFunctionResult(functionFragment: FunctionFragment | string, data: BytesLike): any {\n    const fragment =\n      typeof functionFragment === 'string' ? this.getFunction(functionFragment) : functionFragment;\n\n    return fragment.decodeOutput(data);\n  }\n\n  decodeLog(data: BytesLike, logId: number, receiptId: string): any {\n    const isExternalLoggedType = this.externalLoggedTypes[receiptId];\n    if (isExternalLoggedType) {\n      const externalInterface = this.externalLoggedTypes[receiptId];\n      return externalInterface.decodeLog(data, logId, receiptId);\n    }\n\n    const { loggedType } = findOrThrow(this.jsonAbi.loggedTypes, (type) => type.logId === logId);\n\n    return AbiCoder.decode(this.jsonAbi, loggedType, getBytesCopy(data), 0);\n  }\n\n  updateExternalLoggedTypes(id: string, loggedTypes: Interface) {\n    this.externalLoggedTypes[id] = loggedTypes;\n  }\n\n  encodeConfigurable(name: string, value: InputValue) {\n    const configurable = findOrThrow(\n      this.jsonAbi.configurables,\n      (c) => c.name === name,\n      () => {\n        throw new FuelError(\n          ErrorCode.CONFIGURABLE_NOT_FOUND,\n          `A configurable with the '${name}' was not found in the ABI.`\n        );\n      }\n    );\n\n    return AbiCoder.encode(this.jsonAbi, configurable.configurableType, value);\n  }\n\n  getTypeById(typeId: number) {\n    return findOrThrow(\n      this.jsonAbi.types,\n      (t) => t.typeId === typeId,\n      () => {\n        throw new FuelError(\n          ErrorCode.TYPE_NOT_FOUND,\n          `Type with typeId '${typeId}' doesn't exist in the ABI.`\n        );\n      }\n    );\n  }\n}\n"],"mappings":"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","names":["module","module","module","module","module","module","version","module","version","module","version","module","version","module","version","module","module","module","module","module","module","module","version","module","module","module","module","module","module","module","module","module","module","module","module","version","module","module","module","module","version","module","version","module","version","module","module","versions","module","versions","module","require_valid","module","module","version","module","version","module","version","module","module","versions","version","module","require_semver","module","module","exports","assert","BN","number","Buffer","toNumber","allocate","toTwos","fromTwos","add","comb10MulTo","mask","split","output","prime","ErrorCode","__publicField","bytes","bytes","output","bytes","require_constants","__commonJS","module","require_debug","require_re","require_parse_options","require_identifiers","require_semver","version","require_parse","require_valid","require_clean","require_inc","require_compare","require_eq","require_diff","require_major","require_minor","require_patch","require_prerelease","require_rcompare","require_compare_loose","require_compare_build","require_sort","require_rsort","require_gt","require_lt","require_neq","require_gte","require_lte","require_cmp","require_coerce","require_iterator","require_yallist","require_lru_cache","require_range","require_comparator","require_satisfies","require_to_comparators","require_max_satisfying","versions","require_min_satisfying","require_min_version","require_outside","require_gtr","require_ltr","require_intersects","require_simplify","require_subset","require_valid2","concat","bytes","import_semver","__toESM","require_semver2","getBuiltinVersions","versions","ErrorCode","_FuelError","FuelError","__publicField","BnJs","output","bytes","toNumber","bytes","concat","bytes","bytes","bytes","concat","toNumber","bytes","toNumber","concat","bytes","output","concat","_getPaddedData","getPaddedData_fn","concat","hash","assert","toBytes","toBytes","toBytes","isLE","_32n","toBytes","sha256","hash","toBytes","hash","toBytes","pbkdf2","pbkdf2","sha256","scrypt","hash","crypto","scryptSync","scrypt","toBytes","bytes","keccak256","import_crypto","import_crypto","scrypt","scryptSync","keccak256","randomBytes","crypto","bufferFromString","decrypt","encrypt","keyFromPassword","stringFromBuffer","decryptJsonWalletData","encryptJsonWalletData","bytes"]}